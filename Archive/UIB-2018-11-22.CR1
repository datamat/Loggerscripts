'**********************************************************************
'* Langfristige Waldoekosystem-Forschung LWF / WSL, Meteostation      *
'**********************************************************************
' Station:                WSL LWF-Station, Uitikon Demoflaeche, ID 122
' Telefonnummer:          neu: +41 79 764 39 26 (alt: +41 79 179 90 64)
' Inventarnummer/PakBus:  002040, 40 (aktuell vielleicht noch 101)
'
' Angeschlossene Projekte:
' Projekt 1: Meteodaten
' Projekt 4: Technische Daten
' Projekt 22: Echo EC-5 Soil volumetric water content
' Projekt 23: Ozon
' Projekt 30: Matrixpotential MPS
' Projekt 32: Stammabflusswippen

'----------------------------------------------------------------------
'- S T A T I O N   C O N F I G                                        -
'----------------------------------------------------------------------
Const StatName As String = "002040" : Const StatFull As String = "UIB"
Const StatID = 122 : Const StatL As String = StatName + "_" + StatFull

' The time window of the modem are different, when developing:
Public TestMode As Boolean = 0
' The modem will be open, camera will take pictures every ten minutes:
Public HasElectricity As Boolean = 1 : Public HasCam As Boolean = 1

'----------------------------------------------------------------------
'- D E F I N I T I O N   O F   V A R I A B L E S                      -
'----------------------------------------------------------------------
'*** Connection
Public Start As Boolean : Public HasInt As Boolean : Public Ping
Public WithinWSL As Boolean : Public PingWSL

'*** Modem
Public DefaultTen As Boolean
Public DefaultHour As Boolean
Public IsDay As Boolean
Public MdmLowPower As Boolean
Public MdmOnceDaily As Boolean
Public IsMdmOn As Boolean
Public MdmStatus As String * 40 = "Off"

'*** Camera
Public IsCamOn As Boolean : Public CamStatus As String * 40 = "Off"

'*** FTP connections
Public Transferred As Boolean = 0 : Public FTPSuccess, FTPSuccesso
Const FTPSrvr = "ftp.wsl.ch" : Const FTPUser = "lwfcr1000"
Const FTPPassword = "01.yto.9ae"
Const RemoteFolder = "/data/ftp/lwfcr1000/"
Const FTPUsertest = "lwfmeteo" : Const FTPPasswordtest = "oet21.wl"
Const RemoteFoldertest = "/data/ftp/lwfmeteo/testing/"
Const FTPCRUserName = "lwfmeteo"
Const FTPCRPassword = "4zrxGNLkhRae6"
Public Tstamp As String : Public Filename As String * 100

'*** Miscellaneous
Const SensorOff = "NAN" : Const PortMdm = 9 : Const PortUVBTARH = 6
Const PortMUXCLK = 4 : Const PortMUX1RES = 7 : Const PortMUX2RES = 8
Dim Offset As Float : Public CRDPresent As Boolean : Dim CRDStat
Public P4Batt, PTemp : Units P4Batt = Volts : Units PTemp = Deg C

'----------------------------------------------------------------------
'- S U B R O U T I N E S                                              -
'----------------------------------------------------------------------
'*** Connect: check whether we are connected to the Internet/WSL
Sub IsOnline()
  Start = 1 : HasInt = 0 : Ping = PingIP ("8.8.8.8",200)
  If Ping = 0 Then Ping = PingIP ("8.8.8.8",400)
  If Ping = 0 Then Ping = PingIP ("8.8.8.8",2000)
  If Ping <> 0 Then HasInt = 1
  WithinWSL = 0 : PingWSL = PingIP ("10.30.1.20",200)
  If PingWSL = 0 Then PingWSL = PingIP ("10.30.1.20",400)
  If PingWSL = 0 Then PingWSL = PingIP ("10.30.1.20",2000)
  If PingWSL <> 0 Then WithinWSL = 1
EndSub

'*** Turn modem on or off for clearly defined time windows/conditions
Sub SubMdm ()
  Battery (P4Batt)
  ' Default day is from 6 am to 6 pm UTC
  IsDay = TimeIsBetween (360,900,1440,Min) ' von 7 bis 16, 8 bis 17
  ' Define time windows here for different voltages levels
  If TestMode Then
    DefaultTen = TimeIsBetween (0,3,5,Min)
    DefaultHour = TimeIsBetween (0,3,5,Min)
    MdmLowPower = TimeIsBetween (0,3,5,Min)
    MdmOnceDaily = TimeIsBetween (0,3,5,Min)
  Else
    DefaultTen = TimeIsBetween (8,2,10,Min)
    DefaultHour = TimeIsBetween (58,2,60,Min) AND IsDay
    MdmLowPower = TimeIsBetween (178,182,240,Min) AND IsDay
    MdmOnceDaily = TimeIsBetween (478,488,1440,Min) ' 10 min window
  EndIf  
  ' Here are the logics of the windows and voltages
  If HasElectricity Then
    If TimeIsBetween (0,2,1440,Min) Then
      PortSet (PortMdm,0) : IsMdmOn = 0 : MdmStatus = "Resetting daily"
    Else
      PortSet (PortMdm,1) : IsMdmOn = 1 : MdmStatus = "Always on"
    EndIf
  ' Every day at least ten mins, for emergency handling
  ElseIf MdmOnceDaily AND (P4Batt >= 11.8) Then
    PortSet (PortMdm,1) : IsMdmOn = 1 : MdmStatus = "Once daily"
  ' On low power modus, send every four hrs during day time only
  ElseIf MdmLowPower AND (P4Batt >= 12.0) AND (P4Batt < 12.3) Then
    PortSet (PortMdm,1) : IsMdmOn = 1 : MdmStatus = "Low power"
  ' If enough power, then use standard window of sending every 10 mins
  ' Turn off modem, when data has been transferred through to save data!
  ElseIf DefaultHour AND (P4Batt >= 12.3) AND NOT Transferred Then
    PortSet (PortMdm,1) : IsMdmOn = 1 : MdmStatus = "Hourly"
  ElseIf DefaultTen AND (P4Batt >= 12.6) AND NOT Transferred Then
    PortSet (PortMdm,1) : IsMdmOn = 1 : MdmStatus = "TenMinutes"
  Else
    PortSet (PortMdm,0) : IsMdmOn = 0 : MdmStatus = "Off"
  EndIf
EndSub

'*** Camera on or off to automatically take pictures
Sub SubCam ()
  Battery (P4Batt)
  ' Here are the logics of the windows and voltages
  If HasElectricity AND DefaultTen Then
    SW12 (1) : IsCamOn = 1 : CamStatus = "Default window" 
  ElseIf MdmOnceDaily AND (P4Batt >= 12.4) AND IsMdmOn Then
    SW12 (1) : IsCamOn = 1 : CamStatus = "Daily picture"
  ElseIf MdmLowPower AND (P4Batt >= 13.0) AND IsMdmOn Then
    SW12 (1) : IsCamOn = 1 : CamStatus = "Every four hours"
  Else
    SW12 (0) : IsCamOn = 0 : CamStatus = "Off"
  EndIf    
EndSub

'*** Send all files on drive to the WSL internal ftp server
Sub SubSendToFTP ()
  Delay (0,5,Sec) : Transferred = 0
  Tstamp = Public.TimeStamp(1,1)
  Tstamp = Mid(Tstamp,7,4)+Mid(Tstamp,1,2)+Mid(Tstamp,4,2)+ _
    Mid(Tstamp,12,2)+Mid(Tstamp,15,2)+Mid(Tstamp,18,2)
  Filename = RemoteFolder + StatFull + "_P01Table10_" + Tstamp + ".crd"
  FTPSuccesso = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "P01Table10",Filename,2,0,0,min,-1012)
  ' 0 NumRecs = Alle Daten werden gesendet, je nach Interval
  ' Wenn Intervall auch 0, dann alle neue Daten geschickt:
  '   -> am besten fuer uns!
  ' Wenn Intervall unter 0, dann immer in dem Interval geschickt:
  '   -> interessant, wenn man zBsp. stuendlich immer die letzten
  '      drei Stunden schicken moechte (0,-3,Hour?)
  ' Wenn Intervall ueber 0, dann immer in dem Abstand geschickt
  '   -> interessant, wenn man nur 60 Minuten die 10 Minuten-
  '      Werte uebertragen moechte (0,60,min)
  Filename = RemoteFolder + StatFull + "_P01Table60_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "P01Table60",Filename,2,0,0,min,-1012)
  Filename = RemoteFolder + StatFull + "_DeviceStatus_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "DeviceStatus",Filename,2,0,0,min,-1012)
  Filename = RemoteFolder + StatFull + "_P22SoilEC510_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "P22SoilEC510",Filename,2,0,0,min,-1012)
  Filename = RemoteFolder + StatFull + "_P23Ozone10_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "P23Ozone10",Filename,2,0,0,min,-1012)
  Filename = RemoteFolder + StatFull + "_P30MPS10_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "P30MPS10",Filename,2,0,0,min,-1012)
  Filename = RemoteFolder + StatFull + "_P32Stammabfluss10_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrvr,FTPUser,FTPPassword, _
    "P32Stammabfluss10",Filename,2,0,0,min,-1012)
  If FTPSuccesso = -2 Then Transferred = 1
EndSub

'*** Correct some data by minimum and maximum limits
Sub SUBCheckRange (LVal,LMin,LMax)
  If (LVal > LMax) OR (LVal < LMin) Then LVal = SensorOff
EndSub

'----------------------------------------------------------------------
'- P R O J E C T S                                                    -
'----------------------------------------------------------------------
'**********************************************************************
'*** Project 01: Meteo
Public TARH As Boolean = 1 : Public VWND As Boolean = 1
Public DWND As Boolean = 1 : Public SRAD As Boolean = 1
Public PPFD As Boolean = 1 : Public UVB As Boolean = 1
Public Prec1 As Boolean = 1 : Public Prec2 As Boolean = 0
Public Prec3 As Boolean = 0 : Public Prec4 As Boolean = 0
Public HasAspirated As Boolean = 0 : Public HasPluvio As Boolean = 0
Public HasLWS As Boolean = 0

'*** Calib constants for precip only, otherwise in BeginProgram
' Wippenvolumen Niederschlagssensoren
Const CalPrec1 = 0.200 : Const CalPrec2 = 0.200
Const CalPrec3 = 0.200 : Const CalPrec4 = 0.200
Public MultiSRAD, OffSRAD ' SKS1110
Public MultiPPFD, OffPPFD ' SKP 210/I
Public MultiUVB, OffUVB ' SKU 430/I

'*** Measurement variables
Public SRADact, PPFDact, UVBact ' Radiation sensors
Public TAIRact, RHUMact, VWNDact, VWNDmax, DWNDact ' Other met sensors
Public Precact1, Precact2, Precact3, Precact4 ' Precipication sensors
Public LWMmV, LWMDry, LWMCon, LWMWet ' Leaf wetness sensor
Public Pluvioact (9), TAIRASPact ' Aspirated and Pluvio

'*** Calculated variables
Public SatVPCalc, Ea, VPDact, Dewpointact ' Vapor pressure and Dewpoint

Units TAIRact = Deg C : Units RHUMact = % : Units VWNDact = m s-1
Units VWNDmax = m s-1 : Units DWNDact = Deg : Units SRADact = W m-2
Units PPFDact = W m-2 : Units UVBact = W m-2 : Units LWMmV = mV
Units LWMDry = Minutes : Units LWMCon = Minutes : Units LWMWet = Minutes
Units Pluvioact = mm : Units TAIRASPact = Deg C
Units Precact1 = mm : Units Precact2 = mm : Units Precact3 = mm
Units Precact4 = mm : Units SatVPCalc = kPa : Units VPDact = kPa
Units Ea = kPa : Units Dewpointact = Deg C

'*** Data tables
DataTable (P01Table10,1,-1)
  DataInterval (0,10,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,1,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  ' Data
  Average (1,TAIRact,FP2,0) : FieldNames ("Lufttemperatur") '1
  Average (1,SRADact,FP2,0) : FieldNames ("Globalstrahlung") '2
  Average (1,PPFDact,FP2,0) : FieldNames ("PPFD") '3
  Average (1,UVBact,FP2,0) : FieldNames ("UVB") '4
  WindVector (1,VWNDact,DWNDact,FP2,0,0,0,1)
  FieldNames ("Windgeschwindigkeit,Windrichtung") '5,6
  StdDev (1,TAIRact,FP2,0) : FieldNames ("Lufttemperatur_Stw") '7
  StdDev (1,SRADact,FP2,0) : FieldNames ("Globalstrahlung_Stw") '8
  StdDev (1,PPFDact,FP2,0) : FieldNames ("PPFD_Stw") '9
  StdDev (1,UVBact,FP2,0) : FieldNames ("UVB_Stw") '10
  StdDev (1,VWNDact,FP2,0) : FieldNames ("Windgeschwindigkeit_Stw") '11
  StdDev (1,DWNDact,FP2,0) : FieldNames ("Windrichtung_Stw") '12
  Maximum (1,VWNDmax,FP2,False,False) : FieldNames ("Windspitze") '13
  Average (1,RHUMact,FP2,0) : FieldNames ("Luftfeuchtigkeit") ' 14
  Totalize (1,Precact1,FP2,0) : FieldNames ("Niederschlag1" ) '15
  Totalize (1,Precact2,FP2,0) : FieldNames ("Niederschlag2" ) '16
  Totalize (1,Precact3,FP2,0) : FieldNames ("Niederschlag3" ) '17
  Totalize (1,Precact4,FP2,0) : FieldNames ("Niederschlag4" ) '18
  StdDev (1,RHUMact,FP2,0) : FieldNames ("Luftfeuchtigkeit_Stw") '19
  Average (1,LWMmV,FP2,0) : FieldNames ("LWM_Spannung_mV") '20
  Totalize (1,LWMDry,FP2,0) : FieldNames ("LWMDry_Trocken") '21
  Totalize (1,LWMCon,FP2,0) : FieldNames ("LWMCon_Kontaminiert") '22
  Totalize (1,LWMWet,FP2,0) : FieldNames ("LWMWet_Nass") '23
  Average (1,Dewpointact,FP2,0) : FieldNames ("Taupunkt") '24  
  Average (1,VPDact,FP2,0) : FieldNames ("VaporPressureDeficit") '25
  ' Sample (1,Pluvioact (2), FP2)
  ' FieldNames ("Niederschlag_Pluvio2") '26
  ' Average (1,TAIRASPact,FP2,0)
  ' FieldNames ("Lufttemperatur_Aspirated") '27
EndTable

DataTable (P01Table60,1,-1)
  DataInterval (0,60,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,1,UINT2): FieldNames ("ProjektNr")
  Sample (1,60,UINT2) : FieldNames ("Messperiode")
  ' Data
  Average (1,RHUMact,FP2,0) : FieldNames ("Luftfeuchtigkeit") '1
  Totalize (1,Precact1,FP2,0) : FieldNames ("Niederschlag1") '2
  Totalize (1,Precact2,FP2,0) : FieldNames ("Niederschlag2 ") '3
  Totalize (1,Precact3,FP2,0) : FieldNames ("Niederschlag3 ") '4
  Totalize (1,Precact4,FP2,0) : FieldNames ("Niederschlag4") '5
  StdDev (1,RHUMact,FP2,0) : FieldNames ("Luftfeuchtigkeit_Stw") '6
EndTable

DataTable (P01TableRAW,1,30)
  DataInterval (0,1,Min,0)
  CardOut (0,-1)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,TAIRact,FP2,0) : FieldNames ("Lufttemperatur") '1
  Sample (1,SRADact,FP2,0) : FieldNames ("Globalstrahlung") '2
  Sample (1,PPFDact,FP2,0) : FieldNames ("PPFD") '3
  Sample (1,UVBact,FP2,0) : FieldNames ("UVB") '4
  WindVector (1,VWNDact,DWNDact,FP2,0,0,0,1)
  FieldNames ("Windgeschwindigkeit,Windrichtung") '5,6
  Sample (1,RHUMact,FP2,0) : FieldNames ("Luftfeuchtigkeit") ' 7
  Totalize (1,Precact1,FP2,0) : FieldNames ("Niederschlag1" ) '8
  Totalize (1,Precact2,FP2,0) : FieldNames ("Niederschlag2" ) '9
  Totalize (1,Precact3,FP2,0) : FieldNames ("Niederschlag3" ) '10
  Totalize (1,Precact4,FP2,0) : FieldNames ("Niederschlag4" ) '11
  Sample (1,LWMmV,FP2,0) : FieldNames ("LWM_Spannung_mV") '12
  Totalize (1,LWMDry,FP2,0) : FieldNames ("LWMDry_Trocken") '13
  Totalize (1,LWMCon,FP2,0) : FieldNames ("LWMCon_Kontaminiert") '14
  Totalize (1,LWMWet,FP2,0) : FieldNames ("LWMWet_Nass") '15
  Sample (1,Dewpointact,FP2,0) : FieldNames ("Taupunkt") '16 
  Sample (1,VPDact,FP2,0) : FieldNames ("VaporPressureDeficit") '17
  ' Sample (1,Pluvioact (2), FP2)
  ' FieldNames ("Niederschlag_Pluvio2") '18
  ' Average (1,TAIRASPact,FP2,0)
  ' FieldNames ("Lufttemperatur_Aspirated") '19
EndTable

'*** Standard meteo measurements
Sub SubP01 ()
 ' Activate Hygroclip HC2-S3 and SKU 460
  If (TARH OR UVB) AND TimeIntoInterval (50,60,Sec) Then
    PortSet (PortUVBTARH,1) : Delay (0,10,mSec)
  EndIf
  ' Wind direction (Campbell W200P: SE4,Vx2)
  If DWND Then
    BrHalf (DWNDact,1,mV2500,4,Vx2,1,2500,0,20000,250,357,0)
  Else
    DWNDact = SensorOff
  EndIf
  ' Windgeschwindigkeit (VWND) in main scan (Campbell A10R: P1) and
  ' Percipation (Campbell ARG100: P2) in main scan, has to be!

  ' All other measurements here
  If TimeIntoInterval (0,60,Sec) Then
    ' Temperature and Humidity (HC2-S3 and SKU 460)
    If TARH Then
      VoltSe (TAIRact,1,mv2500,3,0,0,250,0.1,-40)
      Call SUBCheckRange (TAIRact,-40,50)
      VoltSe (RHUMact,1,mv2500,2,0,0,250,0.1,0)
      Call SUBCheckRange (RHUMact,5,108)
      If (RHUMact>100) AND (RHUMact<108) Then RHUMact = 101.01
    Else
      TAIRact = SensorOff : RHUMact = SensorOff
    EndIf
    
    If SRAD Then
      VoltSe (SRADact,1,mV25,7,0,10000,250,MultiSRAD,OffSRAD)
      Call SUBCheckRange (SRADact,-10,2500)
    Else
      SRADact = SensorOff
    EndIf
        
    If PPFD Then
      VoltSe (PPFDact,1,mV250,8,0,10000,250,MultiPPFD,OffPPFD)
      Call SUBCheckRange (PPFDact,-10,2500)
    Else
      PPFDact = SensorOff
    EndIf    
    
    If UVB Then
      VoltDiff (UVBact,1,mV2500,3,0,10000,250,MultiUVB,OffUVB)
      Call SUBCheckRange (UVBact,-10,2500)
    Else
      UVBact = SensorOff
    EndIf    
    
    ' Dewpoint
    If TARH Then
      DewPoint (Dewpointact,TAIRact,RHUMact)
      Call SUBCheckRange (Dewpointact,-10,30)
    Else
      Dewpointact = SensorOff
    EndIf

    ' VPD
    If TARH Then
      SatVP (SatVPCalc,TAIRact)
      Ea = (RHUMact/100)*SatVPCalc
      VPDact = SatVPCalc-Ea
    Else
      VPDact = SensorOff
    EndIf
    
    ' Deactivate Hygroclip HC2-S3 and SKU 460 after measurement
    PortSet (PortUVBTARH,0) : Delay (0,10,mSec)
  EndIf 
  
  ' Leaf wetness sensor
  If HasLWS Then
    BrHalf (LWMmV,1,mV2500,1,3,1,2500,0,10000,250,2500,0)
    LWMDry = 0 : LWMCon = 0 : LWMWet = 0
    If LWMmV < 274 Then
      LWMDry = 0.166666667
    Else
	    If LWMmV >= 284 Then
        LWMWet = 0.166666667
  	  Else
	      LWMCon = 0.166666667
      EndIf
    EndIf
  Else
    LWMmV = SensorOff : LWMDry = SensorOff : LWMWet = SensorOff
    LWMCon = SensorOff
  EndIf
  
  ' Aspirated temperature measurements
  If HasAspirated Then
    ' Activate ASPTC ventilation 20 sec before measurement
    ' If TimeIntoInterval (40,60,Sec) Then PortSet (2,1) --> bereits gebraucht!
    ' Measure ASPTC
    If TimeIntoInterval (0,60,Sec) Then
      ' Go to address 20 on multiplexer 1
      MuxSelect (PortMUXCLK,PortMUX1RES,5,20,1)
      PanelTemp (PTemp,250)
      TCDiff(TAIRASPact,1,mV2_5C,6,TypeE,PTemp,1,0,150,1,0)
      ' Turn off multiplexer
      PortSet (PortMUX1RES,0)
      ' Turn off fan
      ' PortSet (2,1) --> bereits gebraucht!
    EndIf
  Else
    TAIRASPact = SensorOff
  EndIf
  
  ' PLUVIO OTT on SDI12 C3
  If HasPluvio Then  
    If TimeIntoInterval (0,10,Min) Then 
      ' SDI12Recorder (Pluvioact,3,0,"M!",1,0) --> bereits gebraucht!
    EndIf
  Else
    Pluvioact = SensorOff
  EndIf
EndSub

'**********************************************************************
'*** Project 04: Device status
Public LithiumBatt : Units LithiumBatt = Volts
Public Pluvioring(3)

DataTable (DeviceStatus,1,-1)
  DataInterval (0,10,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,4,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  ' Device status data
  Minimum (1,P4Batt,FP2,0,0) : FieldNames ("MinBattVolt")
  Average (1,PTemp,FP2,0) : FieldNames ("AvgPanelTemp")
  Average (1,LithiumBatt,FP2,0) : FieldNames ("AvgLithiumBatt")
  ' Sample (1,Pluvioact (9),Long)
  ' FieldNames ("Status_Niederschlagsmessung_Pluvio2")
  ' Sample (1,Pluvioact (8),Long)
  ' FieldNames ("Status_Heizung_Pluvio2")
  ' Sample (1,Pluvioact (7),FP2)
  ' FieldNames ("Temperatur_Waegezelle_Pluvio2")
  ' Average (1,Pluvioring (1),FP2,0)
  ' FieldNames ("Temperatur_Elektronikeinheit_Pluvio2")
  ' Average (1,Pluvioring (3),FP2,0)
  ' FieldNames ("Temperatur_Auffangring_Pluvio2")
EndTable

Sub SubP04 ()
  PanelTemp (PTemp,250) : Battery (P4Batt)
  LithiumBatt = Status.LithiumBattery (1,1)
  ' PLUVIO OTT on SDI12 C3
  If HasPluvio AND TimeIntoInterval (0,10,Min) Then
    ' SDI12Recorder (Pluvioring,3,0,"M1!",1,0) --> bereits gebraucht!
  Else
    Pluvioact = SensorOff
  EndIf
EndSub

'**********************************************************************
'*** Project 05: Soil temperatures (Sensors T107) 

'**********************************************************************
'*** Project 22: Echo EC-5 Soil volumetric water content
Const nEC = 4 : Public EC5act (nEC), ECU (nEC)
Units EC5act = m3 m-3 : Units ECU = mV : Public i22

DataTable (P22SoilEC510,1,-1)
  DataInterval (0,10,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,22,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  ' Soil water data
  Average (1,EC5act (1),FP2,0) : FieldNames ("EC5_15cm")  
  Average (1,EC5act (2),FP2,0) : FieldNames ("EC5_50cm")
  Average (1,EC5act (3),FP2,0) : FieldNames ("EC5_80cm")
  Average (1,EC5act (4),FP2,0) : FieldNames ("EC5_05cm")
  ' Average (1,EC5act (5),FP2,0) : FieldNames ("EC5_5")
  ' Average (1,EC5act (6),FP2,0) : FieldNames ("EC5_6")
  ' Average (1,EC550cmact (3),FP2,0) : FieldNames ("EC5_50cm_3")
  ' Average (1,EC515cmact (3),FP2,0) : FieldNames ("EC5_15cm_3")
  ' Average (1,EC580cmact (3),FP2,0) : FieldNames ("EC5_80cm_3")
  Average (1,ECU (1),FP2,0) : FieldNames ("EC5_mV_15cm")
  Average (1,ECU (2),FP2,0) : FieldNames ("EC5_mV_50cm")
  Average (1,ECU (3),FP2,0) : FieldNames ("EC5_mV_80cm")  
  Average (1,ECU (4),FP2,0) : FieldNames ("EC5_mV_05cm")
  ' Average (1,ECU (5),FP2,0) : FieldNames ("EC5_mV_5")
  ' Average (1,ECU (6),FP2,0) : FieldNames ("EC5_mV_6")
  ' Average (1,ECU (1),FP2,0) : FieldNames ("EC5_15cm_mV_3")
  ' Average (1,ECU (2),FP2,0) : FieldNames ("EC5_50cm_mV_3")
  ' Average (1,ECU (3),FP2,0) : FieldNames ("EC5_80cm_mV_3")
EndTable

Sub SubP22 ()
  If TimeIntoInterval (0,60,Sec) Then
    Delay (0,10,msec) : PortSet (PortMUX1RES,1) : Delay (0,10,msec)
    ' Messen Spannung Echo EC-5 Bodenwassergehalt
    For i22=1 To 2 ' Before it was from 0 to 2, three times each = 9
      PulsePort (PortMUXCLK,10000) : Delay (0,10,msec) ' CLK is C7
      BrHalf (ECU (i22),3,mV2500,9,Vx1,3,2500,0,10000,250,2500,0) 
      ' BrHalf (ECU (i22*3+2),1,mV2500,12,Vx2,1,2500,0,10000,250,2500,0)
      ' BrHalf (ECU (i22*3+3),1,mV2500,13,Vx2,1,2500,0,10000,250,2500,0)
    Next i22
    Delay (0,10,msec) : PortSet (PortMUX1RES,0) : Delay (0,10,msec)          
    ' Umrechung in Bodenwassergehalt (Lineare Kalibration pro Sensor)
    ' Standardkalibration Y = X*0.00119-0.4 fuer Mineralboeden 
    ' (p., 17 in Manual, 2006)
    For i22=1 To nEC
      EC5act (i22) = (ECU (i22) * 0.00119) - 0.401
    Next i22
    ' EC515cmact (3) = (ECU (7) * 0.00119) - 0.401
    ' EC550cmact (3) = (ECU (8) * 0.00119) - 0.401
    ' EC580cmact (3) = (ECU (9) * 0.00119) - 0.401
  EndIf
EndSub

'**********************************************************************
'*** Project 23: Ozon
' Ganzes Projekt entweder an-/abschalten, nicht einzeln wie bei Meteo
Public OzonMess, OzonVolt, OzonConc ' Default is float
Units OzonMess = ppbv : Units OzonVolt = Volts : Units OzonConc = ppbv

DataTable (P23Ozone10,1,-1)
  DataInterval (0,10,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,23,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  ' Diff channel 5: 9 und 10, aber nur bei minimaler Spannung
  Average (1,OzonMess,FP2,0) : FieldNames ("OzonKonzentration") '1
  ' Diff channel 6: 11 und 12
  ' Average (1,OzonVolt,FP2,0) : FieldNames ("OzonSpannung") '2
  ' Diff channel 5: 9 und 10
  ' Average (1,OzonConc,FP2,0) : FieldNames ("OzonConcentration") '3
EndTable

Sub SubP23 ()
  If TimeIntoInterval (0,60,Sec) Then
    ' Ozonkonzentration in ppb (0.2 ppb pro mV) messen
    VoltDiff (OzonMess,1,mV2500,7,0,10000,250,0.2,0)
    ' Batteriespannung Ozon an SE13, SE14
    ' Multiplier =  (R1+R2)/R2/1000
    ' Beispiel R1 = 620 kOhm,R2 = 110 kOhm,0.00663636
    ' Original: 0.0062 (im Feld)
    ' VoltDiff (OzonVolt,1,mV2500,7,1,0,250,0.00663636,0)
    ' If OzonVolt >= 10.5 Then 
    '  OzonConc = OzonMess
    ' Else
    '   OzonConc = SensorOff 
    ' EndIf
  EndIf
EndSub

'**********************************************************************
'*** Project 30: Matrixpotential MPS2 oder MPS6
Const nMPS = 9 : Public MPmeas(2) : Public MPS (nMPS), MPT (nMPS)
Units MPS = hPa : Units MPT = Deg C : Public i30

DataTable (P30MPS10,1,-1)
  DataInterval (0,10,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,30,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  ' MPS data
  Average (1,MPS (1),FP2,0) : FieldNames ("Bodenwasserpotential_05cm_1")  
  Average (1,MPS (2),FP2,0) : FieldNames ("Bodenwasserpotential_15cm_1")
  Average (1,MPS (3),FP2,0) : FieldNames ("Bodenwasserpotential_30cm_1")
  Average (1,MPS (4),FP2,0) : FieldNames ("Bodenwasserpotential_05cm_2")
  Average (1,MPS (5),FP2,0) : FieldNames ("Bodenwasserpotential_15cm_2")
  Average (1,MPS (6),FP2,0) : FieldNames ("Bodenwasserpotential_30cm_2")
  Average (1,MPS (7),FP2,0) : FieldNames ("Bodenwasserpotential_05cm_3")
  Average (1,MPS (8),FP2,0) : FieldNames ("Bodenwasserpotential_15cm_3")
  Average (1,MPS (9),FP2,0) : FieldNames ("Bodenwasserpotential_30cm_3")
  Average (1,MPT (1),FP2,0) : FieldNames ("Bodentemperatur_05cm_1")
  Average (1,MPT (2),FP2,0) : FieldNames ("Bodentemperatur_15cm_1")
  Average (1,MPT (3),FP2,0) : FieldNames ("Bodentemperatur_30cm_1")  
  Average (1,MPT (4),FP2,0) : FieldNames ("Bodentemperatur_05cm_2")
  Average (1,MPT (5),FP2,0) : FieldNames ("Bodentemperatur_15cm_2")
  Average (1,MPT (6),FP2,0) : FieldNames ("Bodentemperatur_30cm_2")
  Average (1,MPT (7),FP2,0) : FieldNames ("Bodentemperatur_05cm_3")
  Average (1,MPT (8),FP2,0) : FieldNames ("Bodentemperatur_15cm_3")
  Average (1,MPT (9),FP2,0) : FieldNames ("Bodentemperatur_30cm_3")
EndTable

Sub SubP30 ()
  If TimeIntoInterval (0,60,Sec) Then
    Delay (0,10,msec) : PortSet (PortMUX2RES,1) : Delay (1,500,msec)
    For i30=1 To nMPS
      PulsePort (PortMUXCLK,10000) : Delay (1,500,msec)
      SDI12Recorder(MPmeas(),5,0,"M!",1,0)
      MPS (i30) = MPmeas (1) : MPT (i30) = MPmeas (2)
    Next i30
    Delay (0,10,msec) : PortSet (PortMUX1RES,0) : Delay (0,10,msec)
  EndIf
EndSub

'**********************************************************************
'*** Project 32: Stammabflusswippen
Public SW8AC (8) : Units SW8AC = Counts : Public i32

DataTable (P32Stammabfluss10,1,-1)
  DataInterval (0,10,Min,0)
  ' LWF data format
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,32,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  ' Data
  Totalize (1,SW8AC (1),FP2,0)
  FieldNames ("Stammabfluss_Counts_1") '1
  ' Totalize (1,SW8AC (2),FP2,0)
  ' FieldNames ("Stammabfluss_Counts_2") '2
  ' Totalize (1,SW8AC (3),FP2,0)
  ' FieldNames ("Stammabfluss_Counts_3") '3
  ' Totalize (1,SW8AC (4),FP2,0)
  ' FieldNames ("Stammabfluss_Counts_4") '4
  ' Totalize (1,SW8AC (5),FP2,0)
  ' FieldNames ("Stammabfluss_Counts_5") '5
EndTable

Sub SubP32 ()
  If TimeIntoInterval (0,60,Sec) Then
    SDMSW8A (SW8AC (),1,0,2,1,1,0)
    For i32=2 To 8
      SW8AC (i32) = SensorOff
    Next i32
  EndIf
EndSub

'----------------------------------------------------------------------
'-  M A I N   P R O G R A M                                           -
'----------------------------------------------------------------------
SequentialMode ' is needed to make sure that Scan and SlowSequence run
               ' after each other, not in a pipeline
BeginProg
  SetStatus ("StationName",StatL) : SetStatus ("USRDriveSize",0)
  SetStatus ("HTTPEnabled",True) : SetStatus ("FTPEnabled",True)
  SetStatus ("FTPUserName",FTPCRUserName)
  SetStatus ("FTPPassword",FTPCRPassword)
  SetStatus ("TelnetEnabled",True) : SetStatus ("PingEnabled",True)

  ' Before voltate is given to sensors, values bogus
  TAIRact = SensorOff : RHUMact = SensorOff : UVBact = SensorOff
  MultiSRAD = 100 : OffSRAD = 0 ' Kalibrationsfaktor SKS1110
  MultiPPFD = 100 : OffPPFD = 0 ' Kalibrationsfaktor SKP 210/I
  MultiUVB = 6.6666667 : OffUVB = 0' Kalibrationsfaktor SKU 430/I
  
  ' Main Scan
  ' Buffer in SequentialMode always 0. Also, count = 0 to loop forever
  Scan (10,Sec,0,0)
    Call SubP01 ()    
    If VWND Then 
      PulseCount (VWNDact,1,1,2,1,1.25,0)
    Else
      VWNDact = SensorOff : VWNDmax = SensorOff
    EndIf
    If Prec1 Then
      PulseCount (Precact1,1,2,2,0,CalPrec1,0)
    Else
      Precact1 = SensorOff
    EndIf
    Call SUBCheckRange (Precact1,0,100)
    If Prec2 Then
      ' PulseCount (Precact2,1,15,2,0,CalPrec2,0)
    Else 
      Precact2 = SensorOff
    EndIf
    Call SUBCheckRange (Precact2,0,100)
    If Prec3 Then
      ' PulseCount (Precact3,1,16,2,0,CalPrec3,0)
    Else
      Precact3 = SensorOff
    EndIf
    Call SUBCheckRange (Precact3,0,100)
    If Prec4 Then
      ' PulseCount (Precact4,1,17,2,0,CalPrec4,0)
    Else
      Precact4 = SensorOff
    EndIf
    Call SUBCheckRange (Precact4,0,100)
    CallTable P01Table10
    CallTable P01Table60
    CallTable P01TableRAW

    Call SubP04 ()
    CallTable DeviceStatus
    
    Call SubP22 ()
    CallTable P22SoilEC510
    
    Call SubP23 ()
    CallTable P23Ozone10
    
    Call SubP30 ()
    CallTable P30MPS10
    
    Call SubP32 ()
    CallTable P32Stammabfluss10
  NextScan

  ' SlowScan 1
  SlowSequence
    Scan (30,Sec,0,0)
      Battery (P4Batt)
      Call SubMdm ()
      Call SubSendToFTP ()
      If HasCam Then Call SubCam ()
    NextScan
  EndSequence

  ' SlowScan 2  
  SlowSequence
    Scan (1,Min,0,0)
      Call IsOnline ()
    NextScan
  EndSequence

  ' SlowScan 3
  SlowSequence
    Scan (2,Min,0,0)
      CRDStat = Status.CardBytesFree (1,1)
      If CRDStat = -1 Then
        CRDPresent = 0
      Else
        CRDPresent = 1
      EndIf
      If TimeIsBetween (480,488,1440,Min) AND IsMdmOn Then
       Offset = NetworkTimeProtocol ("0.europe.pool.ntp.org",0,100)
      EndIf
    NextScan
  EndSequence
EndProg
