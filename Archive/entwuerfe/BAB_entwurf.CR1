' ***************************************************************
' * WSL / LWF Meteostation                                      *
' ***************************************************************
' Station:           Beatenberg Bestand, BAB, 2
' Number/access:     41797513363-3.wsl.ch
' Inventory/PakBus:  002015, 15
' 
' Running projects:
' 1/4: Meteo and technical data
' 5: Soil temperatures (Sensors T107)
' 22: Soil volumetric water content (Echo EC-5)

' ---------------------------------------------------------------
' - S T A T I O N   C O N F I G                                 -
' ---------------------------------------------------------------
Const SName As String = "002015" : Const SFull As String = "BAB"
Const StatID = 2 : Const StatL As String = SName + "_" + SFull

' The time windows of modem are different, when testing:
Public TestMode As Boolean = 0
' Does the station have power and a camera:
Public Has230V As Boolean = 0 : Public HasCam As Boolean = 1

' ---------------------------------------------------------------
' - D E F I N I T I O N   O F   V A R I A B L E S               -
' ---------------------------------------------------------------
' *** Connection
Public PingStart As Boolean
Public HasInt As Boolean : Public Ping
Public WithinWSL As Boolean : Public PingWSL

' *** Modem
Public DefaultTen As Boolean : Public Hourly As Boolean
Public IsDay As Boolean : Public EveryFourHour As Boolean
Public MdmOnceDaily As Boolean : Public IsMdmOn As Boolean
Public MdmStat As String * 40 = "Off" : Public CountDown
Dim MdmCount As Boolean : Public KeepMdmOn As Boolean = 0

' *** Power setting and low power mailing
Public U_24h = 12.0 : Public U_4h = 12.3 : Public U_1h = 12.4
Public U_10min = 12.5 : Public U_CamDaily = 12.7 : Public U_Cam4h = 12.8

Const ToAddr = "lwfmeteo@gmail.com"
Const Subject = "Low power alarm in " + SFull
Const CRLF = CHR(13)+CHR(10) : Dim Message As String * 250
Public MailSuc : Public SrvResponse As String * 50

' *** Camera
Public CamOn As Boolean : Public CamStat As String * 40 = "Off" 
Public TakeaPic As Boolean : Dim CamCount As Boolean
Dim CamDown ' Timer

' *** Switch
Public IsSWOn As Boolean : Public SWStat As String * 40 = "Off"
Public KeepSWOn As Boolean : Dim SWCount As Boolean : Dim SWCountdown

' *** FTP connections
Public Transf As Boolean = 0 : Public FTPSuccess
Const FTPSrv = "ftp.wsl.ch" : Const FTPUsr = "lwfcr1000"
Const FTPPw = "01.yto.9ae" : Const RmtD = "/data/ftp/lwfcr1000/"
Const FTPCRUsr = "lwfmeteo" : Const FTPCRPw = "?];\]vnF;,wy:Oe$"
Dim Tstamp As String : Public Filename As String * 100

' *** Miscellaneous and sensors
Const SenOff = "NAN" : Const C8_Mdm = 8 : Const C6_SW = 6
Const PrtTARH = 4 : Const PrtMUXCLK = 5 : Const PrtMUX1RES = 6 ' Const PrtMUX2RES = 3
Dim Ofst As Float : Public CRDPresent As Boolean : 
Dim CRDStat : Public Bt, PTemp : Units Bt = Volts  
Units PTemp = Deg C

' ---------------------------------------------------------------
' - S U B R O U T I N E S                                       -
' ---------------------------------------------------------------
' *** Connect: check whether we are connected to the Internet/WSL
Sub IsOnline ()
  PingStart = 1 : HasInt = 0 : Ping = PingIP ("8.8.8.8",300)
  If Ping <> 0 Then HasInt = 1
  If HasInt Then
    WithinWSL = 0 : PingWSL = PingIP ("10.30.1.20",200)
    If PingWSL = 0 Then PingWSL = PingIP ("10.30.1.20",400)
    If PingWSL = 0 Then PingWSL = PingIP ("10.30.1.20",800)
    If PingWSL <> 0 Then WithinWSL = 1
  EndIf
  PingStart = 0
EndSub

' *** Turn modem on or off in an awesome scheme
Sub SubMdm ()
  ' Times: Daytime is from 6-18 UTC, i.e. 7-19, 8-20 Alpha
  IsDay = TimeIsBetween (358,1084,1440,Min)
  DefaultTen = TimeIsBetween (8,3,10,Min)
  Hourly = TimeIsBetween (58,3,60,Min) 
  EveryFourHour = TimeIsBetween (118,124,240,Min) 
  MdmOnceDaily = TimeIsBetween (478,490,1440,Min)
  Battery (Bt) ' Voltage conditions
  ' If Cam has Powersupply
  If Has230V Then
    If TimeIsBetween (1980,1985,3600,Sec) Then
      PortSet (C8_Mdm,0) : IsMdmOn = 0 : MdmStat = "Hourly reset"
    Else
      PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Always on"
    EndIf
  ' If cam is in Test mode
  ElseIf TestMode AND DefaultTen Then
    PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Testing mode"
  ' Every day at least twelve mins, for emergency handling
  ElseIf MdmOnceDaily AND (Bt >= U_24h OR IsMdmOn) Then
    PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Daily window"
  ' Windows according to time and voltage 
  ElseIf EveryFourHour AND (Bt >= U_4h OR IsMdmOn) AND IsDay Then
    PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Four Hour"
  ElseIf Hourly AND (Bt >= U_1h OR IsMdmOn) AND IsDay Then
    PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Hourly"
  ElseIf DefaultTen AND (Bt >= U_10min OR IsMdmOn) Then
    PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Ten min"
  Else
    PortSet (C8_Mdm,0) : IsMdmOn = 0 : MdmStat = "Off"
  EndIf
  ' Turn off Mdm if Transfer done (ecxept Daily and 4h window)
  If Transf AND NOT (MdmOnceDaily OR EveryFourHour) Then
    PortSet (C8_Mdm,0) : IsMdmOn = 0 : MdmStat = "Transfer done"
  EndIf
  ' Manually keep modem on for 15 min
  If KeepMdmOn Then
    If NOT MdmCount Then
      MdmCount = 1 : Timer (1,Min,2)
    EndIf
    CountDown = Timer (1,Min,4)
    If CountDown <= 15 Then 
      PortSet (C8_Mdm,1) : IsMdmOn = 1 : MdmStat = "Keep on"
    Else
      MdmCount = 0 : KeepMdmOn = 0 : Timer (1,Min,1)
    EndIf
  EndIf
EndSub

' *** Low power mailing
Sub LowPwrmail ()
  Battery (Bt)
  If Bt < 12.4 AND IsMdmOn Then
    Message = "Hi!" + CRLF + CRLF
	  Message = Message + "This is an automatic message " 
	  Message = Message + "from your friendly datalogger named " 
	  Message = Message + SFull + ". The battery voltage is " 
	  Message = Message + "below 12.4 V, i.e. exactly " + Bt + " V."
	  MailSuc = EmailRelay (ToAddr,Subject,Message,SrvResponse)
		Erase (Message)
  EndIf
EndSub

' *** Camera taking fantastic pictures
Sub SubCam ()
  Battery (Bt)
  ' If camera has power takes pictures ervery hour during the day
  If Has230V AND TimeIsBetween (58,3,60,Min) AND IsDay Then
    SW12 (1) : CamOn = 1 : CamStat = "Hourly pictures"
  ' Shows that test mode is on
  ElseIf TestMode Then
    If IsMdmOn Then
      SW12 (1) : CamOn = 1 : CamStat = "Testing mode"
    Else
      SW12 (0) : CamOn = 0 : CamStat = "Testing but off" 
    EndIf
  ' Taking pictures accoridng to Time and Voltage  
  ElseIf TimeIsBetween (480,490,1440,Min) AND (Bt >= U_CamDaily OR CamOn)
    SW12 (1) : CamOn = 1 : CamStat = "Daily picture"
  ElseIf TimeIsBetween (120,124,240,Min) AND (Bt >= U_Cam4h OR CamOn) AND IsDay Then
    SW12 (1) : CamOn = 1 : CamStat = "Every four hours"
  Else
    SW12 (0) : CamOn = 0 : CamStat = "Off"
  EndIf
  ' Manually take a picture (Mdm needs to be turned on seperatly)
  If TakeaPic Then
    If NOT CamCount Then
      CamCount = 1 : Timer (2,Min,2)
    EndIf
    CamDown = Timer (2,Min,4)
    If CamDown < 5 Then
      SW12 (1) : CamOn = 1 : CamStat = "Taking a picture"
    Else
      CamCount = 0 : TakeaPic = 0 : Timer (2,Min,1)
    EndIf
  EndIf
EndSub

' *** Turning on and off Switch
'Sub SubSW ()
'If Has230V Then
'    If TimeIsBetween (1980,1985,3600,Sec) Then
'      PortSet (C6_SW,0) : IsSWOn = 0 : SWStat = "Hourly reset"
'    Else
'      PortSet (C6_SW,1) : IsSWOn = 1 : SWStat = "Always on"
'    EndIf
'  ' Every day at least twelve mins, for emergency handling
'  ElseIf MdmOnceDaily AND (Bt >= U_24h OR IsSWOn) Then
'    PortSet (C6_SW,1) : IsSWOn = 1 : SWStat = "Daily window"
'  ' Windows according to time and voltage 
'  ElseIf EveryFourHour AND (Bt >= U_4h OR IsSWOn) AND IsDay Then
'    PortSet (C6_SW,1) : IsSWOn = 1 : SWStat = "Four Hour"
'  Else
'    PortSet (C6_SW,0) : IsSWOn = 0 : SWStat = "Off"
'  EndIf
'  ' Manually keep switch on for 15 min
'  If KeepSWOn Then
'    If NOT SWCount Then
'      SWCount = 1 : Timer (1,Min,2)
'    EndIf
'    SWCountDown = Timer (1,Min,4)
'    If CountDown <= 15 Then 
'      PortSet (C6_SW,1) : IsSWOn = 1 : SWStat = "Keep on"
'    Else
'      SWCount = 0 : KeepSWOn = 0 : Timer (1,Min,1)
'    EndIf
'  EndIf
'EndSub

' *** Send all files on drive to the WSL
Sub SubSendToFTP ()
  Transf = 0 : Tstamp = Public.TimeStamp(1,1)
  Tstamp = Mid(Tstamp,7,4)+Mid(Tstamp,1,2)+Mid(Tstamp,4,2)+ _
    Mid(Tstamp,12,2)+Mid(Tstamp,15,2)+Mid(Tstamp,18,2)
  Filename = RmtD + SFull + "_P01Table10_" + Tstamp + ".crd"
  FTPSuccess = FTPClient (FTPSrv,FTPUsr,FTPPw, _
    "P01Table10",Filename,2,0,0,min,-1012)
  ' NumRecs=0: all data will be send, depending on interval
  ' Interval=0: all new data will be sent
  ' Interval<0: always in that interval, e.g. every hr last 3 hrs
  ' Interval>0: e.g. only send 10 min value every 60 mins
  If FTPSuccess = -1 Then
    Filename = RmtD + SFull + "_DeviceStatus_" + Tstamp + ".crd"
    FTPSuccess = FTPClient (FTPSrv,FTPUsr,FTPPw, _
      "DeviceStatus",Filename,2,0,0,min,-1012)
    If FTPSuccess = -1 Then Transf = 1
  EndIf
  If FTPSuccess = -1 Then
    Filename = RmtD + SFull + "_P01Table60_" + Tstamp + ".crd"
    FTPSuccess = FTPClient (FTPSrv,FTPUsr,FTPPw, _
      "P01Table60",Filename,2,0,0,min,-1012)
  EndIf
  If FTPSuccess = -1 Then
    Filename = RmtD + SFull + "_P05SoilTemp60_" + Tstamp + ".crd"
    FTPSuccess = FTPClient (FTPSrv,FTPUsr,FTPPw, _
      "P05SoilTemp60",Filename,2,0,0,min,-1012)
  EndIf
  If FTPSuccess = -1 Then
    Filename = RmtD + SFull + "_P22SoilEC60_" + Tstamp + ".crd"
    FTPSuccess = FTPClient (FTPSrv,FTPUsr,FTPPw, _
      "P22SoilEC60",Filename,2,0,0,min,-1012)
  EndIf					 
EndSub

' *** Correct some data by minimum and maximum limits
Sub SUBCheckRange (LVal,LMin,LMax)
  If (LVal > LMax) OR (LVal < LMin) Then LVal = SenOff
EndSub

' ---------------------------------------------------------------
' - P R O J E C T S                                             -
' ---------------------------------------------------------------
' *** Project 01: Meteo
Public DWND As Boolean = 0 : Public SRAD As Boolean = 0
Public HasPlv As Boolean = 0

' *** Calib constants for precip only, otherwise in BeginProgram
' Wippenvolumen Niederschlagssensoren
Const CalPrec1 = 0.200
Const MultiSRAD = 100 : Const OffSRAD = 0 ' SKS1110
Const MultiPAR = 100 : Const OffPAR = 0 ' SKP210/I

' *** Measurement variables (current values)
Public SRADcur, PARcur ' Radiation sensors
Public Preccur1 ' Precipication
Public TAIRcur, RHUMcur, RHUMcuri, VWNDcur, DWNDcur
Public Plvcur (9) ' Pluvio

' *** Calculated variables
Dim SatVPCalc, Ea : Public VPDcur, Dewpcur ' VPD and Dewpoint

' *** Units
Units SRADcur = W m-2 : Units PARcur = micromol m-2 s-1 : Units RHUMcur = %
Units TAIRcur = Deg C : Units RHUMcuri = %
Units Preccur1 = mm : Units SatVPCalc = kPa : Units VPDcur = kPa
Units Ea = kPa : Units Dewpcur = Deg C : Units VWNDcur = m s-1
Units DWNDcur = Deg : Alias Plvcur (2) = Plvr : Units Plvr = mm

DataTable (P01Table10,1,-1)
  DataInterval (0,10,Min,0)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,1,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  Average (1,TAIRcur,FP2,0) : FieldNames ("Lufttemperatur")
  Average (1,SRADcur,FP2,0) : FieldNames ("Globalstrahlung")
  Average (1,PARcur,FP2,0) : FieldNames ("PAR")
  Sample (1,SenOff,FP2,0) : FieldNames ("UVB_notinstalled")
  WindVector (1,VWNDcur,DWNDcur,FP2,0,0,0,1)
  FieldNames ("Windgeschwindigkeit,Windrichtung")
  StdDev (1,TAIRcur,FP2,0) : FieldNames ("Lufttemperatur_Stw")
  StdDev (1,SRADcur,FP2,0) : FieldNames ("Globalstrahlung_Stw")
  StdDev (1,PARcur,FP2,0) : FieldNames ("PAR_Stw")
  Sample (1,SenOff,FP2,0) : FieldNames ("UVB_Stw_notinstalled")
  StdDev (1,VWNDcur,FP2,0)
  FieldNames ("Windgeschwindigkeit_Stw")
  StdDev (1,DWNDcur,FP2,0) : FieldNames ("Windrichtung_Stw")
  Maximum (1,VWNDcur,FP2,False,False) : FieldNames ("Windspitze")
  Average (1,RHUMcur,FP2,0) : FieldNames ("Luftfeuchtigkeit")
  Totalize (1,Preccur1,FP2,0) : FieldNames ("Niederschlag1")
  StdDev (1,RHUMcur,FP2,0) : FieldNames ("Luftfeuchtigkeit_Stw")
  Average (1,Dewpcur,FP2,0) : FieldNames ("Taupunkt")  
  Average (1,VPDcur,FP2,0) : FieldNames ("VaporPressureDeficit")
  ' Sample (1,Plvr,FP2) : FieldNames ("Niederschlag_Pluvio")
EndTable

DataTable (Daily,1,100)
  DataInterval (0,1440,Min,0)
  Average (1,TAIRcur,FP2,0) : FieldNames ("Lufttemperatur")
  Average (1,SRADcur,FP2,0) : FieldNames ("Globalstrahlung")
  Average (1,PARcur,FP2,0) : FieldNames ("PAR")
  Sample (1,SenOff,FP2,0) : FieldNames ("UVB_notinstalled")
  WindVector (1,VWNDcur,DWNDcur,FP2,0,0,0,1)
  FieldNames ("Windgeschwindigkeit,Windrichtung")
  Maximum (1,VWNDcur,FP2,False,False) : FieldNames ("Windspitze")
  Average (1,RHUMcur,FP2,0) : FieldNames ("Luftfeuchtigkeit")
  Totalize (1,Preccur1,FP2,0) : FieldNames ("Niederschlag1")
  Average (1,Dewpcur,FP2,0) : FieldNames ("Taupunkt")  
  Average (1,VPDcur,FP2,0) : FieldNames ("VaporPressureDeficit")
  ' Sample (1,Plvr,FP2) : FieldNames ("Niederschlag_Pluvio")
  Minimum (1,Bt,FP2,0,0) : FieldNames ("MinBattVolt")
  Average (1,PTemp,FP2,0) : FieldNames ("AvgPanelTemp")
  Average (1,LithiumBatt,FP2,0) : FieldNames ("AvgLithiumBatt")
EndTable

DataTable (P01Table60,1,1000) ' Only keep some days of data
  DataInterval (0,60,Min,0)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,1,UINT2): FieldNames ("ProjektNr")
  Sample (1,60,UINT2) : FieldNames ("Messperiode")
  Average (1,RHUMcur,FP2,0) : FieldNames ("Luftfeuchtigkeit")
  Totalize (1,Preccur1,FP2,0) : FieldNames ("Niederschlag1")
  StdDev (1,RHUMcur,FP2,0) : FieldNames ("Luftfeuchtigkeit_Stw")
EndTable

DataTable (P01TableRAW,1,1) ' Something will be the minimum
  DataInterval (0,1,Min,0) : CardOut (0,-1)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,TAIRcur,FP2,0) : FieldNames ("Lufttemperatur")
  Sample (1,SRADcur,FP2,0) : FieldNames ("Globalstrahlung")
  Sample (1,PARcur,FP2,0) : FieldNames ("PAR")
  Sample (1,SenOff,FP2,0) : FieldNames ("UVB_notinstalled")
  WindVector (1,VWNDcur,DWNDcur,FP2,0,0,0,1)
  FieldNames ("Windgeschwindigkeit,Windrichtung")
  Sample (1,RHUMcur,FP2,0) : FieldNames ("Luftfeuchtigkeit")
  Totalize (1,Preccur1,FP2,0) : FieldNames ("Niederschlag1")
  Sample (1,Dewpcur,FP2,0) : FieldNames ("Taupunkt") 
  Sample (1,VPDcur,FP2,0) : FieldNames ("VaporPressureDeficit")
  Sample (1,RHUMcuri,FP2,0)
  FieldNames ("Luftfeuchtigkeit_unkorrigiert")
  ' Sample (1,Plvr,FP2)
  ' FieldNames ("Niederschlag_Pluvio")
EndTable

' *** Standard meteo measurements
Sub SubP01 ()
 ' Activate sensors needing power
  If TimeIntoInterval (50,60,Sec) Then
    PortSet (PrtTARH,1) : Delay (0,10,mSec)
  EndIf
  ' Wind direction (Campbell W200P: SE4,Vx2)
  If DWND Then
    BrHalf (DWNDcur,1,mV2500,4,Vx1,1,2500,0,20000,250,357,0)
  Else
    DWNDcur = SenOff
  EndIf
  Call SUBCheckRange (DWNDcur,0,360)
  
  ' Windgeschwindigkeit (VWND) in main scan (Campbell A10R: P1)
  ' Precipitation (Campbell ARG100: P2) in main scan, has to be!

  If TimeIntoInterval (0,60,Sec) Then
    ' Temperature and Humidity everywhere anyway
    VoltSe (TAIRcur,1,mv2500,3,0,0,250,0.1,-40)
    Call SUBCheckRange (TAIRcur,-40,50)
    VoltSe (RHUMcur,1,mv2500,2,0,0,250,0.1,0)
    Call SUBCheckRange (RHUMcur,5,108)
    RHUMcuri = RHUMcur
    If (RHUMcur>100) AND (RHUMcur<108) Then RHUMcur = 105.01

    If SRAD Then
      VoltSe (SRADcur,1,mV25,7,0,10000,250,MultiSRAD,OffSRAD)
    Else
      SRADcur = SenOff
    EndIf
    Call SUBCheckRange (SRADcur,-10,2500)
    
    ' PAR everywhere anyway
    VoltSe (PARcur,1,mV250,8,0,10000,250,MultiPAR,OffPAR)
    Call SUBCheckRange (PARcur,-10,2500)  
    
    ' Dewpoint and VPD calculation
    DewPoint (Dewpcur,TAIRcur,RHUMcur)
    Call SUBCheckRange (Dewpcur,-10,30)
    SatVP (SatVPCalc,TAIRcur)
    Ea = (RHUMcur/100)*SatVPCalc
    VPDcur = SatVPCalc-Ea
    
    ' Deactivate sensor after measurements
    PortSet (PrtTARH,0) : Delay (0,10,mSec)
  EndIf
  
  ' Ott Pluvio on SDI12 C5
  If HasPlv Then  
    If TimeIntoInterval (0,10,Min) Then 
      SDI12Recorder (Plvcur,5,0,"M!",1,0)
    EndIf
  Else
    Plvcur () = SenOff
  EndIf
EndSub

' ***************************************************************
' *** Project 04: Device status
Public LithiumBatt : Units LithiumBatt = V : Public Plvstat(3)
Alias Plvcur (7) = Plvtempw : Units Plvtempw = Deg C
Alias Plvstat (1) = Plvtempe : Units Plvtempe = Deg C
Alias Plvstat (3) = Plvtempa : Units Plvtempa = Deg C

DataTable (DeviceStatus,1,6000)
  DataInterval (0,10,Min,0)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,4,UINT2) : FieldNames ("ProjektNr")
  Sample (1,10,UINT2) : FieldNames ("Messperiode")
  Minimum (1,Bt,FP2,0,0) : FieldNames ("MinBattVolt")
  Average (1,PTemp,FP2,0) : FieldNames ("AvgPanelTemp")
  Average (1,LithiumBatt,FP2,0) : FieldNames ("AvgLithiumBatt")
  ' Sample (1,Plvcur (9),Long)
  ' FieldNames ("Status_Niederschlagsmessung_Pluvio")
  ' Sample (1,Plvcur (8),Long)
  ' FieldNames ("Status_Heizung_Pluvio")
  ' Sample (1,Plvtempw,FP2)
  ' FieldNames ("Temperatur_Waegezelle_Pluvio")
  ' Average (1,Plvtempe,FP2,0)
  ' FieldNames ("Temperatur_Elektronikeinheit_Pluvio")
  ' Average (1,Plvtempa,FP2,0)
  ' FieldNames ("Temperatur_Auffangring_Pluvio")
EndTable

Sub SubP04 ()
  PanelTemp (PTemp,250) : Battery (Bt)
  LithiumBatt = Status.LithiumBattery (1,1)
  ' Ott Pluvio on SDI12 C5
  If HasPlv AND TimeIntoInterval (0,10,Min) Then
    SDI12Recorder (Plvstat,5,0,"M1!",1,0)
  Else
    Plvstat () = SenOff
  EndIf
EndSub

' ***************************************************************
'*** Project 05: Litter and soil temperatures
Public LTempact(2), LrelHact(2)
Public STemp05act (2), STemp10act (2), STemp20act (2)

DataTable (P05SoilTemp60,1,,-1)
  DataInterval (0,60,Min,0)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,5,UINT2) : FieldNames ("ProjektNr")
  Sample (1,60,UINT2) : FieldNames ("Messperiode")
  Average (1,LTempact (1),FP2,0) : FieldNames ("LittTemp05cm_1")
  Average (1,LrelHact (1),FP2,0) : FieldNames ("LittRelH05cm_1")
  Average (1,LTempact (2),FP2,0) : FieldNames ("LittTemp05cm_2")
  Average (1,LrelHact (2),FP2,0) : FieldNames ("LittRelH05cm_4")
  Average (1,STemp05act (1),FP2,0) : FieldNames ("Soiltemp05cm_1")
  Average (1,STemp05act (2),FP2,0) : FieldNames ("Soiltemp05cm_2")
  Average (1,STemp20act (1),FP2,0) : FieldNames ("Soiltemp20cm_1")
  Average (1,STemp20act (2),FP2,0) : FieldNames ("Soiltemp20cm_2")
  'Average (1,STemp10act (1),FP2,0) : FieldNames ("Soiltemp10cm_1")
  'Average (1,STemp10act (2),FP2,0) : FieldNames ("Soiltemp10cm_2")
EndTable

Sub SubP05 ()
  If TimeIntoInterval (59,60,Min) Then
    PortSet (PrtMUX1RES,1)
    ' Sensoren Streu (Clip) einschalten
    PortSet (7,1) : Delay (0,3,Sec)
    
	' Set 1 - Streutemperatur und -feuchte (+5 cm)
    PulsePort (PrtMUXCLK,10000) : Delay (0,10,mSec)
    ' CR1000.S9 - H1.COM.AM416.Set1.H1 - Clip1.STemp
    BrHalf (LTempact (1),1,mV2500,9,Vx2,1,2500,0,10000,250,0.1*2500,-40*2500) 
    ' CR1000.S10 - L1.COM.AM416.Set1.L1 - Clip1.SFeuchte
    BrHalf (LrelHact (1),1,mV2500,10,Vx2,1,2500,0,10000,250,0.1*2500,0*2500) 
    
	' Set 2 - Streutemperatur und -feuchte (+5 cm)
    PulsePort (PrtMUXCLK,10000) : Delay (0,10,mSec)
    ' CR1000.S9 - H1.COM.AM416.Set2.H1 - Clip1.STemp
    BrHalf (LTempact (2),1,mV2500,9,Vx2,1,2500,0,10000,250,0.1*2500,-40*2500) 
    ' CR1000.S10 - L1.COM.AM416.Set2.L1 - Clip1.SFeuchte
    BrHalf (LrelHact (2),1,mV2500,10,Vx2,1,2500,0,10000,250,0.1*2500,0*2500) 
    ' Sensoren Streu (Clip) ausschalten
    PortSet (7,0)
	
    ' Set 3 - Bodentemperatur Stab 1: -5cm, -20cm [, -10cm]
    PulsePort (PrtMUXCLK,10000) : Delay (0,10,mSec)
    ' CR1000.S9 - H1.COM.AM416.Set3.H1 - Stab1.BT_5
    Therm107 (STemp05act (1),1,9,2,0,250,1,0)
    ' CR1000.S10 - H1.COM.AM416.Set3.H1 - Stab1.BT_20
    Therm107 (STemp20act (1),1,10,2,0,250,1,0)
    ' CR1000.S11 - H1.COM.AM416.Set3.H1 - Stab1.BT_10 Optional
    ' Therm107 (STemp20act (1),1,11,2,0,250,1,0)
    
	  ' Set 4 - Bodentemperatur Stab 2: -5cm, -20cm [, -10cm]
    PulsePort (PrtMUXCLK,10000) : Delay (0,10,mSec)
    ' CR1000.S9 - H1.COM.AM416.Set4.H1 - Stab1.BT_5
    Therm107 (STemp05act (2),1,9,2,0,250,1,0)
    ' CR1000.S10 - H1.COM.AM416.Set4.H1 - Stab1.BT_20
    Therm107 (STemp20act (2),1,10,2,0,250,1,0)
    ' CR1000.S11 - H1.COM.AM416.Set4.H1 - Stab1.BT_10 Optional
    ' Therm107 (STemp20act (2),1,11,2,0,250,1,0)
    ' Multiplexer ausschalten
    PortSet (PrtMUX1RES,0) : Delay (0,10,mSec)
  EndIf
EndSub

' ***************************************************************
'*** Project 22: Echo EC-5 soil volumetric water content
Public EC15cmact (3), EC50cmact (3), EC80cmact (3), ECU (10)
Public EC05cmact (1) : Units EC15cmact = m3 m-3 : Units ECU = mV
Dim i22

DataTable (P22SoilEC60,1,-1)
  DataInterval (0,60,Min,0)
  Sample (1,StatID,UINT2) : FieldNames ("Stationskennung")
  Sample (1,22,UINT2) : FieldNames ("ProjektNr")
  Sample (1,60,UINT2) : FieldNames ("Messperiode")
  Average (1,EC15cmact (1),FP2,0) : FieldNames ("EC5_15cm_1")  
  Average (1,EC50cmact (1),FP2,0) : FieldNames ("EC5_50cm_1")
  Average (1,EC80cmact (1),FP2,0) : FieldNames ("EC5_80cm_1")
  Average (1,EC15cmact (2),FP2,0) : FieldNames ("EC5_15cm_2")
  Average (1,EC50cmact (2),FP2,0) : FieldNames ("EC5_50cm_2")
  Average (1,EC80cmact (2),FP2,0) : FieldNames ("EC5_80cm_2")
  Average (1,EC50cmact (3),FP2,0) : FieldNames ("EC5_50cm_3")
  Average (1,EC15cmact (3),FP2,0) : FieldNames ("EC5_15cm_3")
  Average (1,EC80cmact (3),FP2,0) : FieldNames ("EC5_80cm_3")
  Average (1,ECU (1),FP2,0) : FieldNames ("EC5_15cm_mV_1")
  Average (1,ECU (2),FP2,0) : FieldNames ("EC5_50cm_mV_1")
  Average (1,ECU (3),FP2,0) : FieldNames ("EC5_80cm_mV_1")  
  Average (1,ECU (4),FP2,0) : FieldNames ("EC5_15cm_mV_2")
  Average (1,ECU (5),FP2,0) : FieldNames ("EC5_50cm_mV_2")
  Average (1,ECU (6),FP2,0) : FieldNames ("EC5_80cm_mV_2")
  Average (1,ECU (7),FP2,0) : FieldNames ("EC5_15cm_mV_3")
  Average (1,ECU (8),FP2,0) : FieldNames ("EC5_50cm_mV_3")
  Average (1,ECU (9),FP2,0) : FieldNames ("EC5_80cm_mV_3")
  ' Teabag
  Average (1,EC05cmact (1),FP2,0) : FieldNames ("EC5_05cm_4")
  Average (1,ECU (10),FP2,0) : FieldNames ("EC5_05cm_mV_4")
EndTable

Sub SubP22 ()
  If TimeIntoInterval (59,60,Min) Then
    PortSet (PrtMUX1RES,1) : Delay (0,10,msec)             
    For i22 = 1 To 11
      PulsePort (PrtMUXCLK,10000) : Delay (0,10,msec)
    Next i22
    ' Set 12 ff: Messen Spannung Echo EC-5 Bodenwassergehalt
    For i22 = 0 To 2              
      PulsePort (PrtMUXCLK,10000) : Delay (0,10,msec)
      BrHalf (ECU (i22*3+1),1,mV2500,9,Vx2,1,2500,0,10000,250,2500,0) 
      BrHalf (ECU (i22*3+2),1,mV2500,10,Vx2,1,2500,0,10000,250,2500,0)
      BrHalf (ECU (i22*3+3),1,mV2500,11,Vx2,1,2500,0,10000,250,2500,0)
    Next i22
    ' Teabag
    'PulsePort (PrtMUXCLK,10000) : Delay (0,10,msec) ' CLK is C7
    'BrHalf (ECU (10),1,mV2500,9,Vx2,1,2500,0,10000,250,2500,0) 
    PortSet (PrtMUX1RES,0) : Delay (0,10,msec)          
    ' Umrechung in Bodenwassergehalt (Lineare Kalibration pro Sensor)
    ' Standardkalibration Y = X*0.00119-0.4 fuer Mineralboeden 
    ' (p., 17 in Manual, 2006)
    EC15cmact (1) = (ECU (1) * 0.00119) - 0.4
    EC50cmact (1) = (ECU (2) * 0.00119) - 0.4
    EC80cmact (1) = (ECU (3) * 0.00119) - 0.4
    EC15cmact (2) = (ECU (4) * 0.00119) - 0.4
    EC50cmact (2) = (ECU (5) * 0.00119) - 0.4
    EC80cmact (2) = (ECU (6) * 0.00119) - 0.4
    EC15cmact (3) = (ECU (7) * 0.00119) - 0.4
    EC50cmact (3) = (ECU (8) * 0.00119) - 0.4
    EC80cmact (3) = (ECU (9) * 0.00119) - 0.4
    ' Teabag
    'EC05cmact (1) = (ECU (10) * 0.00119) - 0.4
  EndIf
EndSub

' ---------------------------------------------------------------
' -  M A I N   P R O G R A M                                    -
' ---------------------------------------------------------------
SequentialMode ' needed so that Scans run after each other

BeginProg
  SetStatus("StationName",StatL) : SetStatus("USRDriveSize",0)
  SetStatus("HTTPEnabled",1) : SetStatus("FTPEnabled",1)
  SetStatus("FTPUsername",FTPCRUsr) : SetStatus("PingEnabled",1)
  SetStatus("TelnetEnabled",1) : SetStatus("FTPPassword",FTPCRPw)

  ' Before voltate is given to sensors, values bogus
  TAIRcur = SenOff : RHUMcur = SenOff : RHUMcuri = SenOff
  SatVPCalc = SenOff : Ea = SenOff : PARcur = SenOff
  Preccur1 = SenOff : VPDcur = SenOff : Dewpcur = SenOff
  SRADcur = SenOff : DWNDcur = SenOff : VWNDcur = SenOff
  KeepMdmOn = 1 : MdmCount = 1 : Timer (1,Min,2)

  ' Main Scan
  Scan (10,Sec,0,0)
    Call SubP01 ()    
    PulseCount (VWNDcur,1,1,2,1,1.25,0)
    PulseCount (Preccur1,1,2,2,0,CalPrec1,0)
    Call SUBCheckRange (Preccur1,0,100)
    CallTable P01Table10
    CallTable P01Table60
    CallTable Daily
    CallTable P01TableRAW
    Call SubP04 ()
    CallTable DeviceStatus
	  Call SubP05 ()
    CallTable P05SoilTemp60
    Delay (1,1,Sec)
	  Call SubP22 ()
	  CallTable P22SoilEC60
  NextScan

  ' SlowScan 1
  SlowSequence
    Scan (30,Sec,0,0)
      If TimeIntoInterval (4,10,Min) Then Transf = 0
      Battery (Bt) : Call SubMdm ()
      If IsMdmOn Then Call SubSendToFTP ()
    NextScan
  EndSequence

  ' SlowScan 2  
  SlowSequence
    Scan (1,Min,0,0)
      Delay (0,1,Sec)
      If HasCam Then Call SubCam ()
      'Call SubSW ()
      Call IsOnline ()
    NextScan
  EndSequence

  ' SlowScan 3
  SlowSequence
    Scan (120,Min,0,0)
      Call LowPwrmail ()
      CRDStat = Status.CardBytesFree (1,1)
      If CRDStat = -1 Then
        CRDPresent = 0
      Else
        CRDPresent = 1
      EndIf
      If TimeIsBetween (480,488,1440,Min) AND IsMdmOn Then
        Ofst = NetworkTimeProtocol ("0.europe.pool.ntp.org",0,100)
      EndIf
    NextScan
  EndSequence
EndProg
