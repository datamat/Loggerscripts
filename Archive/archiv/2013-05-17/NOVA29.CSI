;{CR10X}
;
;Programm fuer Station Novaggio Physiologie (10 Saftflusssensoren (Multiplexer), 10 Dendrometer (Multiplexer),
;10 Bodenfeuchtesensoren (CR10X))
;Range Check Sapflow und Dendrometer-Messungen
;
;Mittelwertbildung alle 10 Minuten
;Version 2.9 : 22.8.08 RZ

;==============================================================================
; Station:
; --------
;   o Serial Number:       Z20081 - Nova29
;   o Location:            Novaggio
;   o Call Number:         079 209 50 76
;   o Connection:
;   o Service Window:
;
; Program:
; --------
;   + Station Program 1:     Port 1: AM16/32A reset
;                            Port 2: AM16/32A clock
;                            Port 3: leer
;                            Port 4: GSM Ignition (high = ON)
;                            Port 5: SOL (12V):
;                            Port 6: SOL (12V): ECHO-Speisung
;                            Port 7: SOL (GND): Dendro-Speisung (5V Logger)
;                            Port 8: SOL (GND): Sapflow-Speisung
;
;                            Flag 1:
;                            Flag 2:
;                            Flag 3:
;                            Flag 4: High = GSM ON (Zeitfenster verlaenger)
;                            Flag 5:
;                            Flag 6: high = ECHO AUS
;                            Flag 7: high = Dendrometerspeisung AUS
;                            Flag 8: high = Sapflowspeisung AUS
;
;

;   o Source Code:         Nova29.CSI
;   o Author:              Roman Zweifel / WSL
;   o Version:             2.9 (August 2008)
;
; Table 4 Parameters:
; -------------------
; @@00  Station ID = Speicherintervall [10]
; @@01  Execution Interval Table 1 [10s]
; @@02  Stationsnummer [..]
; @@03  Projektnummer [..]
; @@04
; @@05
; @@06



*Table 1 Program
  01: 10        Execution Interval (seconds)

;-------------------------- Stationsstatus ---------------------------
1:  Z=F x 10^n (P30)
 1: 70       F
 2: 00       n, Exponent of 10
 3: 34       Z Loc [ Stat_Nr__ ]


2:  Z=F x 10^n (P30)
 1: 21       F
 2: 00       n, Exponent of 10
 3: 35       Z Loc [ Proj_Nr   ]


3:  Batt Voltage (P10)
 1: 31       Loc [ BattVolt  ]


4:  Internal Temperature (P17)
 1: 32       Loc [ CR10XTemp ]


5:  If (X<=>Y) (P88)
 1: 31       X Loc [ BattVolt  ]
 2: 4        <
 3: 33       Y Loc [ Batt_Min  ]
 4: 30       Then Do



     6:  Z=X (P31)
      1: 31       X Loc [ BattVolt  ]
      2: 33       Z Loc [ Batt_Min  ]



7:  End (P95)




8:  If time is (P92)
 1: 5        Minutes (Seconds --) into a
 2: 1440     Interval (same units as above)
 3: 10       Set Output Flag High (Flag 0)


9:  Set Active Storage Area (P80)
 1: 3        Input Storage Area
 2: 33       Loc [ Batt_Min  ]

10:  Minimum (P74)^23980
 1: 1        Reps
 2: 0        Value Only
 3: 31       Loc [ BattVolt  ]

11:  Maximum (P73)^7352
 1: 1        Reps
 2: 00       Time Option
 3: 31       Loc [ BattVolt  ]



12:  Read Ports (P25)
 1: 1        Mask (0..255)
 2: 38       Loc [ Ctr1      ]


13:  Read Ports (P25)
 1: 2        Mask (0..255)
 2: 39       Loc [ Ctr2      ]


14:  Read Ports (P25)
 1: 4        Mask (0..255)
 2: 40       Loc [ Ctr3      ]


15:  Read Ports (P25)
 1: 8        Mask (0..255)
 2: 41       Loc [ Ctr4      ]

16:  Read Ports (P25)
 1: 16       Mask (0..255)
 2: 42       Loc [ Ctr5      ]


17:  Read Ports (P25)
 1: 32       Mask (0..255)
 2: 43       Loc [ Ctr6      ]


18:  Read Ports (P25)
 1: 64       Mask (0..255)
 2: 44       Loc [ Ctr7      ]

19:  Read Ports (P25)
 1: 128      Mask (0..255)
 2: 45       Loc [ Ctr8      ]



;--------------------------- Programmsteuerung -----------------------------
;---------------------- Batt- und Flag-abhaengige Speisungssteuerung ------------------



20:  If Flag/Port (P91)
 1: 18       Do if Flag 8 is High
 2: 58       Set Port 8 Low



21:  If (X<=>F) (P89)
 1: 48       X Loc [ LowBat8   ]
 2: 1        =
 3: 1        F
 4: 58       Set Port 8 Low


22:  If (X<=>F) (P89)
 1: 48       X Loc [ LowBat8   ]
 2: 1        =
 3: 0        F
 4: 30       Then Do


     23:  If Flag/Port (P91)
      1: 28       Do if Flag 8 is Low
      2: 48       Set Port 8 High


    24:  End (P95)



25:  If Flag/Port (P91)
 1: 17       Do if Flag 7 is High
 2: 57       Set Port 7 Low



26:  If (X<=>F) (P89)
 1: 47       X Loc [ LowBat7   ]
 2: 1        =
 3: 1        F
 4: 57       Set Port 7 Low


27:  If (X<=>F) (P89)
 1: 47       X Loc [ LowBat7   ]
 2: 1        =
 3: 0        F
 4: 30       Then Do


     28:  If Flag/Port (P91)
      1: 27       Do if Flag 7 is Low
      2: 47       Set Port 7 High


    29:  End (P95)




30:  If Flag/Port (P91)
 1: 16       Do if Flag 6 is High
 2: 56       Set Port 6 Low



31:  If (X<=>F) (P89)
 1: 46       X Loc [ LowBat6   ]
 2: 1        =
 3: 1        F
 4: 56       Set Port 6 Low


32:  If (X<=>F) (P89)
 1: 46       X Loc [ LowBat6   ]
 2: 1        =
 3: 0        F
 4: 30       Then Do


     33:  If Flag/Port (P91)
      1: 26       Do if Flag 6 is Low
      2: 46       Set Port 6 High


    34:  End (P95)






35:  If (X<=>F) (P89)
 1: 31       X Loc [ BattVolt  ]
 2: 4        <
 3: 11.9     F
 4: 30       Then Do



     36:  Z=F x 10^n (P30)
      1: 1        F
      2: 00       n, Exponent of 10
      3: 48       Z Loc [ LowBat8   ]


37:  End (P95)


38:  If (X<=>F) (P89)
 1: 31       X Loc [ BattVolt  ]
 2: 4        <
 3: 11.8     F
 4: 30       Then Do



     39:  Z=F x 10^n (P30)
      1: 1        F
      2: 00       n, Exponent of 10
      3: 46       Z Loc [ LowBat6   ]

40:  End (P95)


41:  If (X<=>F) (P89)
 1: 31       X Loc [ BattVolt  ]
 2: 4        <
 3: 11.6     F
 4: 30       Then Do


     42:  Z=F x 10^n (P30)
      1: 1        F
      2: 00       n, Exponent of 10
      3: 47       Z Loc [ LowBat7   ]


43:  End (P95)




44:  If (X<=>F) (P89)
 1: 33       X Loc [ Batt_Min  ]
 2: 3        >=
 3: 12.0     F
 4: 30       Then Do


     45:  Z=F x 10^n (P30)
      1: 0        F
      2: 00       n, Exponent of 10
      3: 48       Z Loc [ LowBat8   ]

46:  End (P95)


47:  If (X<=>F) (P89)
 1: 33       X Loc [ Batt_Min  ]
 2: 3        >=
 3: 11.9     F
 4: 30       Then Do


     48:  Z=F x 10^n (P30)
      1: 0        F
      2: 00       n, Exponent of 10
      3: 46       Z Loc [ LowBat6   ]

49:  End (P95)


50:  If (X<=>F) (P89)
 1: 33       X Loc [ Batt_Min  ]
 2: 3        >=
 3: 11.8     F
 4: 30       Then Do


     51:  Z=F x 10^n (P30)
      1: 0        F
      2: 00       n, Exponent of 10
      3: 47       Z Loc [ LowBat7   ]

52:  End (P95)




;------------------------- Messungen auf dem Logger ------------------------


53:  If Flag/Port (P91)
 1: 46       Do if Port 6 is High
 2: 30       Then Do

54:  Excite-Delay (SE) (P4)
 1: 3        Reps
 2: 5        2500 mV Slow Range
 3: 3        SE Channel
 4: 1        Excite all reps w/Exchan 1
 5: 1        Delay (0.01 sec units)
 6: 2500     mV Excitation
 7: 21       Loc [ Echo_1    ]
 8: .00119   Multiplier
 9: -0.4     Offset

55:  Excite-Delay (SE) (P4)
 1: 3        Reps
 2: 5        2500 mV Slow Range
 3: 6        SE Channel
 4: 2        Excite all reps w/Exchan 2
 5: 1        Delay (0.01 sec units)
 6: 2500     mV Excitation
 7: 24       Loc [ Echo_4    ]
 8: .00119   Multiplier
 9: -0.4     Offset

56:  Excite-Delay (SE) (P4)
 1: 3        Reps
 2: 5        2500 mV Slow Range
 3: 9        SE Channel
 4: 3        Excite all reps w/Exchan 3
 5: 1        Delay (0.01 sec units)
 6: 2500     mV Excitation
 7: 27       Loc [ Echo_7    ]
 8: .00119   Multiplier
 9: -0.4     Offset

;Multiplier und Offset gemaess Manual fuer EC-5. Fuer exakte Messungen ist eine Eichung mit der
;entsprechenden Kabellaenge und des Bodentyps notwendig.


57:  Else (P94)

     58:  Beginning of Loop (P87)
      1: 0000     Delay
      2: 9        Loop Count


          59:  Z=F x 10^n (P30)
           1: -999     F
           2: 0        n, Exponent of 10
           3: 21    -- Z Loc [ Echo_1    ]


     60:  End (P95)

61:  End (P95)





;--------------------------- Subroutinenaufruf -----------------------------

; --- Multiplexer-Ansteuerung und Messungen auf dem Multiplexer ---
62:  Do (P86)
 1: 1        Call Subroutine 1

; --- GSM ---
63:  Do (P86)
 1: 2        Call Subroutine 2


;--------------------------- Fehlerpruefung und Ablegen der Messdaten -----------------------------
; Range check Sap Flow: 1-25

64:  Beginning of Loop (P87)
 1: 0000     Delay
 2: 10       Loop Count

     65:  If (X<=>F) (P89)
      1: 101   -- X Loc [ XSap_1    ]
      2: 3        >=
      3: 1        F
      4: 30       Then Do

          66:  If (X<=>F) (P89)
           1: 101   -- X Loc [ XSap_1    ]
           2: 4        <
           3: 25       F
           4: 30       Then Do


          67:  Z=X (P31)
           1: 101   -- X Loc [ XSap_1    ]
           2: 1     -- Z Loc [ Sap_1     ]


          68:  Z=Z+1 (P32)
           1: 201   -- Z Loc [ NSap_1    ]




     69:  Else (P94)

; noetig, damit der Zaehler der Variablen stimmt

          70:  Z=X/Y (P38)
           1: 101   -- X Loc [ XSap_1    ]
           2: 1     -- Y Loc [ Sap_1     ]
           3: 131      Z Loc [ Dummy     ]

     71:  End (P95)

72:  Else (P94)

; noetig, damit der Zaehler der Variablen stimmt


          73:  Z=X/Y (P38)
           1: 101   -- X Loc [ XSap_1    ]
           2: 1     -- Y Loc [ Sap_1     ]
           3: 131      Z Loc [ Dummy     ]



74:  End (P95)

75:  End (P95)

; Range check Dendro: 1-2500

76:  Beginning of Loop (P87)
 1: 0000     Delay
 2: 10       Loop Count

     77:  If (X<=>F) (P89)
      1: 111   -- X Loc [ XDend_1   ]
      2: 3        >=
      3: 1        F
      4: 30       Then Do

          78:  If (X<=>F) (P89)
           1: 111   -- X Loc [ XDend_1   ]
           2: 4        <
           3: 2500     F
           4: 30       Then Do

          79:  Z=X (P31)
           1: 111   -- X Loc [ XDend_1   ]
           2: 11    -- Z Loc [ Dend_1    ]

          80:  Z=Z+1 (P32)
           1: 211   -- Z Loc [ NDend_1   ]


     81:  Else (P94)

; noetig, damit der Zaehler der Variablen stimmt

          82:  Z=X/Y (P38)
           1: 111   -- X Loc [ XDend_1   ]
           2: 11    -- Y Loc [ Dend_1    ]
           3: 131      Z Loc [ Dummy     ]


     83:  End (P95)

84:  Else (P94)

; noetig, damit der Zaehler der Variablen stimmt

          85:  Z=X/Y (P38)
           1: 111   -- X Loc [ XDend_1   ]
           2: 11    -- Y Loc [ Dend_1    ]
           3: 131      Z Loc [ Dummy     ]


86:  End (P95)

87:  End (P95)




;------------- Mittelung & Abspeicherung der Messdaten ----------------------

88:  If time is (P92) ;Messwert-Enderfassung alle 10 Minuten
 1: 0000     Minutes (Seconds --) into a
 2: 10       Interval (same units as above)
 3: 10       Set Output Flag High (Flag 0)


; Array ID entspricht dem Messintervall in den Daten (erste Kolonne)
89:  Set Active Storage Area (P80)^12800
 1: 1        Final Storage Area 1
 2: 10       Array ID


90:  Sample (P70)^29306
 1: 1        Reps
 2: 34       Loc [ Stat_Nr__ ]

91:  Sample (P70)^8196
 1: 1        Reps
 2: 35       Loc [ Proj_Nr   ]


92:  Real Time (P77) ^20252;Festlegung des zu speichernden Datum-/Zeitformats
 1: 1110     Year,Day,Hour/Minute (midnight = 0000)


93:  Beginning of Loop (P87)
 1: 0000     Delay
 2: 10       Loop Count

94:  If (X<=>F) (P89)
 1: 201   -- X Loc [ NSap_1    ]
 2: 3        >=
 3: 2        F
 4: 30       Then Do


95:  Average (P71)^6045;Mittelwertbildung der Saftflussmesswerte
 1: 1        Reps
 2: 1     -- Loc [ Sap_1     ]

96:  Else (P94)

     97:  Z=F x 10^n (P30)
      1: -999     F
      2: 00       n, Exponent of 10
      3: 1     -- Z Loc [ Sap_1     ]


     98:  Sample (P70)^32425
      1: 1        Reps
      2: 1     -- Loc [ Sap_1     ]


99:  End (P95)


100:  End (P95)




101:  Resolution (P78)
 1: 1        High Resolution


102:  Beginning of Loop (P87)
 1: 0000     Delay
 2: 10       Loop Count

103:  If (X<=>F) (P89)
 1: 211   -- X Loc [ NDend_1   ]
 2: 3        >=
 3: 2        F
 4: 30       Then Do


104:  Average (P71)^22589
 1: 1        Reps
 2: 11    -- Loc [ Dend_1    ]

105:  Else (P94)

     106:  Z=F x 10^n (P30)
      1: -999     F
      2: 00       n, Exponent of 10
      3: 11    -- Z Loc [ Dend_1    ]


     107:  Sample (P70)^17342
      1: 1        Reps
      2: 11    -- Loc [ Dend_1    ]


108:  End (P95)



109:  End (P95)


110:  Average (P71)^5722
 1: 9        Reps
 2: 21       Loc [ Echo_1    ]

111:  Average (P71)^31113
 1: 3        Reps
 2: 31       Loc [ BattVolt  ]

112:  Average (P71)^22425
 1: 1        Reps
 2: 49       Loc [ VoltDend  ]


113:  Resolution (P78)
 1: 0        Low Resolution

114:  If time is (P92)
 1: 0000     Minutes (Seconds --) into a
 2: 10       Interval (same units as above)
 3: 30       Then Do

     115:  Beginning of Loop (P87)
      1: 0000     Delay
      2: 10       Loop Count

116:  Z=F x 10^n (P30)
 1: 0        F
 2: 00       n, Exponent of 10
 3: 201   -- Z Loc [ NSap_1    ]


117:  Z=F x 10^n (P30)
 1: 0        F
 2: 00       n, Exponent of 10
 3: 211   -- Z Loc [ NDend_1   ]

118:  End (P95)


119:  End (P95)

;-------------------------------- Table 2 ----------------------------------

*Table 2 Program
  02: 00        Execution Interval (seconds)



;-------------------------------- Subroutinen ------------------------------


*Table 3 Subroutines

;-------- Subroutine Multiplexer --------

1:  Beginning of Subroutine (P85)
 1: 1        Subroutine 1

2:  Do (P86)
 1: 41       Set Port 1 High ;Aktivieren des Multiplexers (AM16/32A)


3:  Beginning of Loop (P87) ;Start des Messdurchlaufs fuer 10 Granier-Sensoren
 1: 0000     Delay
 2: 10       Loop Count

4:  Step Loop Index (P90) ;Festlegen der richtigen Reihenfolge der Input Locations
 1: 1        Step

5:  Do (P86) ;Aktivieren des Clock-Impulses fuer AM16/32A
 1: 72       Pulse Port 2

6:  Excitation with Delay (P22) ;10ms Pause zwischen den Einzelmessungen
 1: 01       Ex Channel
 2: 0000     Delay W/Ex (units = 0.01 sec)
 3: 5        Delay After Ex (units = 0.01 sec)
 4: 0000     mV Excitation

7:  If Flag/Port (P91)
 1: 48       Do if Port 8 is High
 2: 30       Then Do

8:  Volt (Diff) (P2) ;Messinstruktion fuer Saftflusssensoren und Umrechnung in Grad C
 1: 1        Reps
 2: 1        2.5 mV Slow Range
 3: 01       DIFF Channel
 4: 101   -- Loc [ XSap_1    ]
 5: 25       Mult
 6: 0.0      Offset

9:  Else (P94)


          10:  Z=F x 10^n (P30)
           1: -999     F
           2: 0        n, Exponent of 10
           3: 101   -- Z Loc [ XSap_1    ]


11:  End (P95)

12:  End (P95) ;Ende des Messdurchlaufs fuer Saftflussensoren

; Start Messdurchlauf fuer 10 Punktdendrometer
13:  Beginning of Loop (P87)
 1: 0000     Delay
 2: 10       Loop Count


     14:  Step Loop Index (P90)
      1: 1        Step


     15:  Do (P86)
      1: 72       Pulse Port 2

     16:  Excitation with Delay (P22)
      1: 01       Ex Channel
      2: 0000     Delay W/Ex (0.01 sec units)
      3: 5        Delay After Ex (0.01 sec units)
      4: 0000     mV Excitation

17:  If Flag/Port (P91)
 1: 47       Do if Port 7 is High
 2: 30       Then Do

18:  Volt (Diff) (P2) ;Messinstruktion fuer Dendrometer
 1: 1        Reps
 2: 5        2500 mV Slow Range
 3: 01       DIFF Channel
 4: 111   -- Loc [ XDend_1   ]
 5: 1        Mult
 6: 0.0      Offset

19:  Else (P94)


          20:  Z=F x 10^n (P30)
           1: -999     F
           2: 0        n, Exponent of 10
           3: 111   -- Z Loc [ XDend_1   ]


21:  End (P95)

22:  End (P95)
; Ende des Messdurchlaufs fuer Dendrometer



; Start Messdurchlauf fuer 1 5V-Spannungsmessung
23:  Beginning of Loop (P87)
 1: 0000     Delay
 2: 1        Loop Count


     24:  Step Loop Index (P90)
      1: 1        Step


     25:  Do (P86)
      1: 72       Pulse Port 2

     26:  Excitation with Delay (P22)
      1: 01       Ex Channel
      2: 0000     Delay W/Ex (0.01 sec units)
      3: 5        Delay After Ex (0.01 sec units)
      4: 0000     mV Excitation

27:  Volt (Diff) (P2) ;Messinstruktion fuer Dendrometer
 1: 1        Reps
 2: 5        2500 mV Slow Range
 3: 01       DIFF Channel
 4: 49    -- Loc [ VoltDend  ]
 5: 2.963    Mult
 6: 0.0      Offset



28:  End (P95)
; Ende des Messdurchlaufs fuer 5V-Dendrospeisungs-Messung




; Hier sind noch weiter Multiplexer-Eingaenge frei programmierbar. Im Moment leer.

29:  Do (P86)
 1: 51       Set Port 1 Low ;Deaktivieren des AM416


30:  End (P95)


;--------------------------------------- GSM ------------------------------------------

; Subroutine 2 Datenkommunikation ueber Siemens GSM (Port 4)
; Innerhalb der Zeitgrenzen kann mit dem Flag 4 die Natelkommunikation
; permanent aufrecht erhalten werden. Wird das Flag 4 nicht auf high gesetzt
; bleibt das Natel jeweils die zweiten 10 Minuten jeder vollen Stunde von 9:00 bis 18:00 eingeschaltet
; Eine automatische Einschaltung des GSM erfolgt, wenn die Batterie_V > 13.0 V ist.

31:  Beginning of Subroutine (P85)
 1: 2        Subroutine 2

32:  If time is (P92)
 1: 0        Minutes (Seconds --) into a
 2: 1        Interval (same units as above)
 3: 10       Set Output Flag High (Flag 0)

33:  Set Active Storage Area (P80)
 1: 3        Input Storage Area
 2: 36       Loc [ Zeit_HHMM ]

34:  Real Time (P77)^16064
 1: 20       Hour/Minute (midnight = 2400)


; wenn Batterie-Ladung < 10.5 V, Natel ausschalten
35:  If (X<=>F) (P89)
 1: 31       X Loc [ BattVolt  ]
 2: 4        <
 3: 10.5     F
 4: 30       Then Do

36:  Do (P86)
 1: 24       Set Flag 4 Low

37:  Do (P86)
 1: 54       Set Port 4 Low

38:  End (P95)

; Jede Stunde wird Flag 4 einmal auf 0 gesetzt (volle Stunde).
; Damit bleibt Natel auch nach maueller einschaltung max. 60 min eingeschaltet.
; Ausnahme bleibt bei Batteriespannung > 13.0 V


39:  If time is (P92)
 1: 00       Minutes (Seconds --) into a
 2: 60       Interval (same units as above)
 3: 30       Then Do

40:  Do (P86)
 1: 24       Set Flag 4 Low


41:  End (P95)



;Uebertragungszeit von xx bis yy jeweils 10 Min einer Stunde
; von xx:11 bis xx:zz (7h bis 17h30)


42:  If (X<=>F) (P89)
 1: 36       X Loc [ Zeit_HHMM ]
 2: 3        >=
 3: 700      F
 4: 30       Then Do

; wenn Batterie-Ladung > 13.0 V, Natel einschalten
43:  If (X<=>F) (P89)
 1: 31       X Loc [ BattVolt  ]
 2: 3        >=
 3: 13.0     F
 4: 14       Set Flag 4 High


44:  If time is (P92)
 1: 10       Minutes (Seconds --) into a
 2: 60       Interval (same units as above)
 3: 30       Then Do

45:  Z=F (P30)
 1: 1        F
 2: 00       Exponent of 10
 3: 37       Z Loc [ FlagKontr ]

46:  Do (P86)
 1: 44       Set Port 4 High


47:  End (P95)

48:  If time is (P92)
 1: 20       Minutes (Seconds --) into a
 2: 60       Interval (same units as above)
 3: 30       Then Do


49:  Z=F (P30)
 1: 0        F
 2: 00       Exponent of 10
 3: 37       Z Loc [ FlagKontr ]

50:  End (P95)

51:  End (P95)

52:  If (X<=>F) (P89)
 1: 36       X Loc [ Zeit_HHMM ]
 2: 3        >=
 3: 1730     F
 4: 30       Then Do


53:  Do (P86)
 1: 24       Set Flag 4 Low

54:  Z=F (P30)
 1: 0        F
 2: 0        Exponent of 10
 3: 37       Z Loc [ FlagKontr ]

55:  End (P95)

;-------------------- Kommunikationsfenster Start ---------------------


56:  If (X<=>F) (P89)
 1: 36       X Loc [ Zeit_HHMM ]
 2: 1        =
 3: 0615     F
 4: 30       Then Do

     57:  Z=F x 10^n (P30)
      1: 1        F
      2: 00       n, Exponent of 10
      3: 37       Z Loc [ FlagKontr ]


     58:  Do (P86)
      1: 44       Set Port 4 High



59:  End (P95)

60:  If (X<=>F) (P89)
 1: 36       X Loc [ Zeit_HHMM ]
 2: 1        =
 3: 0630     F
 4: 30       Then Do

     61:  Z=F x 10^n (P30)
      1: 0.0      F
      2: 00       n, Exponent of 10
      3: 37       Z Loc [ FlagKontr ]

62:  End (P95)


;-------------------- Kommunikationsfenster End ---------------------



63:  If Flag/Port (P91)
 1: 14       Do if Flag 4 is High
 2: 44       Set Port 4 High

64:  If Flag/Port (P91)
 1: 24       Do if Flag 4 is Low
 2: 30       Then Do

65:  If (X<=>F) (P89)
 1: 37       X Loc [ FlagKontr ]
 2: 1        =
 3: 0        F
 4: 54       Set Port 4 Low

66:  End (P95)

67:  End (P95)

End Program












































-Input Locations-
1 Sap_1     7 4 2
2 Sap_2     3 0 0
3 Sap_3     3 0 0
4 Sap_4     3 0 0
5 Sap_5     3 0 0
6 Sap_6     3 0 0
7 Sap_7     3 0 0
8 Sap_8     3 0 0
9 Sap_9     3 0 0
10 Sap_10    11 0 0
11 Dend_1    3 4 2
12 Dend_2    3 0 0
13 Dend_3    11 0 0
14 Dend_4    11 0 0
15 Dend_5    11 0 0
16 Dend_6    11 0 0
17 Dend_7    11 0 0
18 Dend_8    11 0 0
19 Dend_9    11 0 0
20 Dend_10   19 0 0
21 Echo_1    5 1 2
22 Echo_2    11 1 1
23 Echo_3    9 1 1
24 Echo_4    13 1 1
25 Echo_5    9 1 1
26 Echo_6    25 1 1
27 Echo_7    13 1 1
28 Echo_8    9 1 1
29 Echo_9    17 1 1
30 leer      1 0 0
31 BattVolt  5 9 1
32 CR10XTemp 9 1 1
33 Batt_Min  17 4 2
34 Stat_Nr__ 1 0 1
35 Proj_Nr   1 0 1
36 Zeit_HHMM 1 3 1
37 FlagKontr 1 0 5
38 Ctr1      1 0 1
39 Ctr2      1 0 1
40 Ctr3      1 0 1
41 Ctr4      1 0 1
42 Ctr5      1 0 1
43 Ctr6      1 0 1
44 Ctr7      1 0 1
45 Ctr8      1 0 1
46 LowBat6   1 1 2
47 LowBat7   1 1 2
48 LowBat8   1 1 2
49 VoltDend  1 1 2
101 XSap_1    1 5 2
102 XSap_2    1 0 0
103 XSap_3    1 0 0
104 XSap_4    1 0 0
105 XSap_5    1 0 0
106 XSap_6    1 0 0
107 XSap_7    1 0 0
108 XSap_8    1 0 0
109 XSap_9    1 0 0
110 XSap_10   1 0 0
111 XDend_1   1 5 2
112 XDend_2   0 0 0
113 XDend_3   0 0 0
114 XDend_4   0 0 0
115 XDend_5   0 0 0
116 XDend_6   0 0 0
117 XDend_7   0 0 0
118 XDend_8   0 0 0
119 XDend_9   0 0 0
120 XDend_10  0 0 0
131 Dummy     1 0 4
201 NSap_1    1 1 2
202 NSap_2    0 0 0
203 NSap_3    0 0 0
204 NSap_4    0 0 0
205 NSap_5    0 0 0
206 NSap_6    0 0 0
207 NSap_7    0 0 0
208 NSap_8    0 0 0
209 NSap_9    0 0 0
210 NSap_10   0 0 0
211 NDend_1   1 1 1
212 NDend_2   0 0 0
213 NDend_3   0 0 0
214 NDend_4   0 0 0
215 NDend_5   0 0 0
216 NDend_6   0 0 0
217 NDend_7   0 0 0
218 NDend_8   0 0 0
219 NDend_9   0 0 0
220 NDend_10  0 0 0
221 _________ 0 0 0
2121 _________ 1 0 0
-Program Security-
0000
0000
0000
-Mode 4-
-Final Storage Area 2-
0
-CR10X ID-
0
-CR10X Power Up-
3
-CR10X Compile Setting-
3
-CR10X RS-232 Setting-
-1
-DLD File Labels-
0
-Final Storage Labels-
0,Year_RTM,20252
0,Day_RTM
0,Hour_Minute_RTM
1,Sap_1_AVG~1,6045
2,Proj_Nr~35,8196
3,10,12800
4,Stat_Nr__~34,29306
5,Hour_Minute_RTM,16064
6,BattVolt_MIN~31,23980
7,BattVolt_MAX~31,7352
8,Echo_1_AVG~21,5722
8,Echo_2_AVG~22
8,Echo_3_AVG~23
8,Echo_4_AVG~24
8,Echo_5_AVG~25
8,Echo_6_AVG~26
8,Echo_7_AVG~27
8,Echo_8_AVG~28
8,Echo_9_AVG~29
9,BattVolt_AVG~31,31113
9,CR10XTemp_AVG~32
9,Batt_Min_AVG~33
10,Dend_1_AVG~11,22589
11,Sap_1~1,32425
12,Dend_1~11,17342
13,VoltDend_AVG~49,22425
