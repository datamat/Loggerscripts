'**************************************************************************************
'*                                                                                    *
'*   Programm:          WSL_BF_Mutrux.CR1                                             *
'*                      Bodenfeuchte- und Meteo-Stationen WSL                         *
'*   Logger:            Campbell CR1000                                               *
'*   Version:           V 1.1                                                         *
'*   Ersterstellung:    12.04.2012                                                    *
'*   letzte Aenderung:  25.05.2012                                                    *
'*   Autor:             Martin Zimmerli, SensAlpin GmbH                               *
'*   Weiter Aenderung:  5.2.2013 Aline Frank, Peter Waldner: EC-5 Kalibration         *
'*   Weiter Aenderung:  24.11.2016 Peter Waldner: Verschiebung nach Mutrux            *
'*                          Reduktion auf Meteo, Parameter im Programm                *
'**************************************************************************************
'*
'*   Station:                WSL Birmensdorf - Standort Matzendorf
'*   Stations-ID:            121
'*   Projektnummer:          28
'*   Telefonnummer:          079 640 93 26 
'*   PakBus-Adresse:         121
'*
'*
'*   Messungen:
'*   **********
'*   Lufttemperatur          TAIR [°C], Rotronic Hygroclip 2               (SE3, C6)
'*   rel. Feuchte            RHUM [%],  Rotronic Hygroclip 2               (SE2, C6)
'*   Niederschlag            PLUV [mm], Campbell ARG100 0.1mm Wippe             (P2)
'*   SW-Strahlung            SRAD [W/m2], Skye SKS1110                         (SE1)
'*   Batteriespannung        VBAT [V]
'*   Loggertermperatur       TLOG [°C]
'*
'*
'*   Programmkonfiguration:
'*   **********************
'*   Station:               Kennung durch StationID
'*   Projekt:               Kennung durch ProjectID
'*   Sensoren:              Ein-/Aus-Schalten der Messung von XXXX mit StatXXXX
'*                          - StatXXXX >= 1:   eingeschaltet
'*                          - StatXXXX  = 0:   ausgeschaltet
'*   Niederschlag:          cPLUVcali:  Wippenvolumen in mm
'*   Strahlung:             cSRADcali:  1000 / Empfindlichkeit [uV/W/m2]
'*
'*   
'*   Energieversorgung:
'*   ******************
'*   Solarspeisung 50W / 38Ah mit Laderegler SunSaver SS-6
'*
'*   Kommunikation / Datenablage:
'*   ****************************
'*   GSM:                   Wavecom Fastrack XTEND FXT009
'*                          geschaltet ueber SW12V (low: EIN / high: AUS) 
'*                          im Normalbetrieb immer ein / Reset taeglich um 11:55 Uhr
'*
'*                          bei tiefer Batteriespannung morgens um 05:00 Uhr
'*                          VBAT5h < VBATlim (default: 12.4V), wird das GSM-Modem
'*                          jeweils nur noch waehrend vier Zeitfenstern eingeschaltet
'*                          (default: 06:00-06:30/10:00-10:30/14:00-14:30/18:00-18:30)
'*
'*   GPRS:                  falls StatFTP >= 1:
'*                          GPRS-Verbindung wird nach dem jeweils ersten FTP-Transfer
'*                          nach jeder vollen Stunde einmal stuendlich geschlossen und
'*                          vor dem naechsten FTP-Transfer wieder geoeffnet.
'*                          falls StatFTP = 0:
'*                          GPRS-Verbindung wird stuendlich 
'*                          um hh:10 geoeffnet und
'*                          um hh:00 geschlossen.
'*
'*   FTP:                   falls StatFTP >= 1:
'*                          Alle 10 (cMETEOINT) Minuten wird eine Datenzeile ins 
'*                          lokale Datenfile USR:LocalData.dat geschrieben. 
'*                          Dieses wird per FTP auf einen FTP-Server uebertragen.
'*                          Bei erfolgreicher Uebertragung wird das File geloescht,
'*                          ansonsten wird es stehen gelassen.
'*
'*   Zeit:                  falls StatNTP >= 1:
'*                          Die Loggerzeit wird einmal taeglich nach Aufbau der 
'*                          ersten GPRS-Verbindung nach Mitternacht mit dem NTP-Server
'*                          "pool.ntp.org" auf GMT+1 ohne Sommerzeit synchronisiert.
'*          
'*   Daten:				          Meteodaten (cMETEOINT = 10 Minuten):
'*								          Stations-ID, Projektnummer, Messintervall, 
'*                          Lufttemperatur, Luftfeuchtigkeit, Niederschlag, 
'*                          Niederschlagssumme, Globalstrahlung, Batteriespannung,
'*                          Loggertemperatur, Qualitaetsparameter
'*
'*								          Konfigurationsdaten (bei Aenderung der Konfiguration):
'*								          Stations-ID, Projektnummer, Messintervall, 
'*                          Status, PLUVcali, SRADcali.
'*                          
'*   Konfiguration:         Die Konfigurationsparameter werden im Programm festgelegt.
'*
'*
'**************************************************************************************
'*                                                                                    *
'*   D E K L A R A T I O N                                                            *
'*                                                                                    *
'**************************************************************************************
SequentialMode

'--------------------------------------------------------------------------------------
'-   K O N S T A N T E N                                                              -
'--------------------------------------------------------------------------------------
Const cPROGSCAN       =    5
Const cSensorOff      = -999     '* Code fuer nicht angeschlossene Sensoren

'*** Programm Konfiguration
Const cnSTATUS        =    8      '* Anzahl binaerer Status-Werte
Const cstVBATT        =    1      '*  - Binaerwert:      1
Const cstTARH         =    2      '*  - Binaerwert:      2
Const cstPLUV         =    3      '*  - Binaerwert:      4
Const cstSRAD         =    4      '*  - Binaerwert:      8
Const cstGHUM         =    5      '*  - Binaerwert:     16
Const cstGPOT         =    6      '*  - Binaerwert:     32
Const cstFTP          =    7      '*  - Binaerwert:     64
Const cstNTP          =    8      '*  - Binaerwert:    128

ConstTable
  Const cMETEOINT     =   10      '* Speicherintervall der Meteodaten in Minuten
  Const cPPPOPENATMPT =    5      '* Anzahl Verbindungsversuche bei GPRS-Attach
  Const cFTP_IP       = "ftp.wsl.ch"
  Const cFTP_User     = "username"
  Const cFTP_Pwd      = "password"
  Const cDataFileName = "USR:LocalData.dat"
  Const cFTPFileName  = "WSL_Birmesndorf.dat"
EndConstTable 


'--------------------------------------------------------------------------------------
'-   V A R I A B L E N                                                                -
'--------------------------------------------------------------------------------------

'*** Stationskonfiguration
Public StationID As Long
Public ProjectID As Long
Public ProgVers
Public StatusIn As Long

'*** Messgroessen:
Public VBATact
Public TLOGact
Public TARHact(2)
 Alias TARHact(1) = TAIRact
 Alias TARHact(2) = RHUMact
Public PLUVact
Public SRADact

'*** Programmsteuerung:
Public FlagMeteoData     As Boolean
Public FlagConfigData    As Boolean
Public FlagBatSave       As Boolean
Public FlagForceMeasure  As Boolean
Public FlagEnterStatus   As Boolean
Public FlagEnterConfig   As Boolean
Public FlagTimeSync      As Boolean
Public FlagPPPOpen       As Boolean
Public FlagPPPClose      As Boolean
Public FlagInit          As Long

'*** Programmkonfiguration:
Public Quality As Long
Public Status(cnSTATUS) As Long
 Alias Status(cstVBATT)  = StatBATT
 Alias Status(cstTARH)   = StatTARH
 Alias Status(cstPLUV)   = StatPLUV
 Alias Status(cstSRAD)   = StatSRAD
 Alias Status(cstGHUM)   = StatGHUM
 Alias Status(cstGPOT)   = StatGPOT
 Alias Status(cstFTP)    = StatFTP
 Alias Status(cstNTP)    = StatNTP
Public SRadCali
Public PluvCali
Public VBATlim

'*** Umrechnungen von Messgroessen:
Public PluvSum
Public Pluv10m
Public VBATmean
Public VBAT5h
Dim    TAIR
Dim    RHUM
Dim    SRAD
Dim    VBAT
Dim    TLOG

'***   FTP-Filetransfer
Public FlagFTP As Long
Public DataLine As String * 500
Public DataFile As Long
Public pppIPAddress As String * 30
Public pppCloseSuccess As Boolean
Public pppOpenState As Boolean
Public pppOpenCount As Long
Public FTPSendSuccess As Boolean
Public NTPOffset As Long
Public FTPCount As Long

'***   Konfiguration GSM-Modem
Public FlagConfigGSM As Long
Public GSMCommandString As String * 100
Public GSMAnswer As String * 1000
Dim    SerialInput As String * 100

'*** Zeitvariable
Dim    ActualTime(9)
 Alias ActualTime(1) = Year
 Alias ActualTime(2) = Month
 Alias ActualTime(3) = DayOfMonth
 Alias ActualTime(4) = hour
 Alias ActualTime(5) = minute
 Alias ActualTime(6) = second
 Alias ActualTime(7) = uSecond
 Alias ActualTime(8) = DayOfWeek
 Alias ActualTime(9) = DayOfYear

'*** Masseinheiten
Units TAIRact = deg_C
Units RHUMact = %
Units SRADact = W/m2
Units VBATact = V
Units TLOGact = deg_C

'*** Hilfsvariablen
Dim iCnt As Long

'**************************************************************************************
'*                                                                                    *
'*   D A T E N - T A B L E S                                                          *
'*                                                                                    *
'**************************************************************************************
DataTable (Meteo,FlagMeteoData,-1)
	DataInterval (0,cMETEOINT,Min,10)
  Sample(1,StationID,IEEE4)
	FieldNames("Stationskennung")
  Sample(1,ProjectID,IEEE4)
	FieldNames("Projektcode")
  Sample(1,cMETEOINT,FP2)
	FieldNames("Messintervall")
  Average(1,TAIRact,FP2,False)
	FieldNames("Lufttemperatur")
  Average(1,RHUMact,FP2,False)
	FieldNames("Luftfeuchtigkeit")
  Sample(1,Pluv10m,FP2)
	FieldNames("Niederschlag")
  Sample(1,PluvSum,FP2)
	FieldNames("Niederschlagssumme")
  Average(1,SRADact,FP2,False)
	FieldNames("Globalstrahlung")
	Average(1,VBATact,FP2,False)
	FieldNames("Batteriespannung")
	Average(1,TLOGact,FP2,False)
	FieldNames("Loggertemperatur")
	Sample(1,Quality,FP2)
	FieldNames("Qualitaet")
EndTable

DataTable (Konfiguration,FlagConfigData,50)
  Sample(1,StationID,IEEE4)
	FieldNames("Stationskennung")
  Sample(1,ProjectID,IEEE4)
	FieldNames("Projektcode")
  Sample(1,cMETEOINT,FP2)
	FieldNames("Messintervall")
  Sample(1,Status,IEEE4)
	FieldNames("Status")
  Sample(1,PluvCali,FP2)
	FieldNames("Faktor_PLUV")
  Sample(1,SRadCali,FP2)
	FieldNames("Faktor_SRAD")
EndTable

'**************************************************************************************
'*                                                                                    *
'*   S U B R O U T I N E N                                                            *
'*                                                                                    *
'**************************************************************************************

'--------------------------------------------------------------------------------------
'-   SUBInitialize: Programm initialisieren   -----------------------------------------
Sub SUBInitialize
  FlagMeteoData    = True
  FlagConfigData   = True
  FlagBatSave      = False
  FlagForceMeasure = False
  FlagEnterStatus  = False
  FlagEnterConfig  = False
  FlagTimeSync     = False
  FlagPPPOpen      = False
  FlagPPPClose     = False
  pppOpenState     = False
  pppCloseSuccess  = PPPClose
  ' Programmparameter einlesen / initialisieren
  Call SUBReadParameter
  Call SUBInitStatus
  FlagInit         = 1
EndSub '---   End SUBInitialize   -----------------------------------------------------

'**************************************************************************************
'***   SUBDefaultParameter: Initialisierung mit Defaultwerten    *******************
Sub SUBDefaultParameter
  StationID        =     191   '* Stations-Identifikationsnummer
  ProjectID        =      28   '* Projekt-Identifikationsnummer
  StatusIn         =      63   '* Status (binaere Sensorkonfiguration)
  SRadCali         =     100   '* Kalibrationsfaktor SKS1110
  PluvCali         =   0.203   '* Wippenvolumen Niederschlagssensor
  VBATlim          =    12.4   '* Grenzspannung fuer Batteriesparmode
  ProgVers         =     2.2   '* Programmversion
  ' Batteriespannung bei Initialisierung
  VBAT5h=VBATlim+0.1
EndSub

'**************************************************************************************
'***   SUBReadParameter: Einlesen der Programmparameter   *****************************
Sub SUBReadParameter
    Call SUBDefaultParameter
EndSub

'--------------------------------------------------------------------------------------
'-   SUBCheckRange: range check to set status value   ---------------------------------
Sub SUBCheckRange(lVal, lMin, lMax, lStatInd)
  If Status(lStatInd) >= 1 Then
    If (lVal > lMax) OR (lVal < lMin) OR (lVal = NAN) Then
      Status(lStatInd) = Status(lStatInd) + 1
    EndIf
  EndIf
EndSub '---   End SUBCheckRange   -----------------------------------------------------

'--------------------------------------------------------------------------------------
'-   SUBEnterStatus: enter changed Status(n)-values and calculate StatusIn   ----------
Sub SUBEnterStatus
  Dim k1
  
  StatusIn = 0 
  For k1 = 1 To cnSTATUS
    If Status(k1) >= 1 Then
      StatusIn = StatusIn + INT(2^(k1-1)+0.3)
    EndIf
  Next k1
  FlagEnterStatus = False
EndSub '---   End SUBEnterStatus   ----------------------------------------------------

'--------------------------------------------------------------------------------------
'-   SUBInitStatus: Statuswerte aus binaerem Status initialisieren   ------------------
Sub SUBInitStatus
  Dim k2
  
  For k2 = 1 To cnSTATUS
    If ((StatusIn MOD (2^k2)) > (2^(k2-1)-0.5)) Then
      Status(k2) = 1
    Else
      Status(k2) = 0
    EndIf
  Next k2
EndSub '---   End SUBInitStatus   -----------------------------------------------------

'--------------------------------------------------------------------------------------
'-   SUBQuality: calculate binary quality from status values   ------------------------
Sub SUBQuality
  Dim k3
  
  Quality = 0
  For k3 = 1 To cnSTATUS
    If Status(k3) >= 2 Then
      Quality = Quality + INT(2^(k3-1)+0.3)
    EndIf
  Next k3
  Call SUBInitStatus
EndSub '---   End SUBQuality   --------------------------------------------------------


'--------------------------------------------------------------------------------------
'-   SUBGSM: Steuerung des GSM-Modems (Wavecom Fastrack XTEND FXT009)   ---------------
Sub SUBGSM
  If FlagBatSave Then
    '***   Stromsparmode: GSM eingeschaltet nur jeweils von   *************************
    '***   06:00-06:30 / 10:00-10:30 / 14:00-14:30 / 18:00-18:30
    If minute = 00 Then
      If hour = 6 OR hour = 10 OR hour = 14 OR hour = 18 Then
        SW12(0)
      EndIf
    ElseIf minute = 30
      If hour = 6 OR hour = 10 OR hour = 14 OR hour = 18 Then
        SW12(1)
        pppOpenState = False
      EndIf
    EndIf
  Else
    '---   ohne Stromsparmode Reset taeglich um 11:55 Uhr
    If IfTime(715,1440,Min) Then
      SW12(1)
      pppOpenState = False
    Else
      SW12(0)
    EndIf
  EndIf
  '---   einmal stuendlich GPRS-Verbindung schliessen
  If TimeIntoInterval(0,60,Min) Then
    FlagPPPClose = True
  EndIf
  '---   falls FTP ausgeschaltet stuendlich GPRS-Verbindung oeffnen
  If StatFTP = 0 Then
    If TimeIntoInterval(10,60,Min) Then
      FlagPPPOpen = True
      pppOpenCount = 0
    EndIf
  EndIf
EndSub '---   End SUBGSM   ------------------------------------------------------------

'--------------------------------------------------------------------------------------
'-   SUBConfigGSM: Seriell-Befehle an GSM-Modem (Wavecom  -  RS232, 9600baud)   -------
Sub SUBConfigGSM
  Dim i As Long
  
  SerialOpen(ComRS232,9600,0,100,100)
  Delay(1,200,mSec)
  SerialFlush(ComRS232)
  SerialOut(ComRS232,GSMCommandString & CHR(13),"",1,10)
  GSMAnswer = ""
  For i = 1 To 10
    SerialIn(SerialInput,ComRS232,100,13,100)
    GSMAnswer = GSMAnswer & SerialInput
  Next i
  SerialFlush(ComRS232)
  SerialClose(ComRS232)
EndSub '---   End SUBConfigGSM   ------------------------------------------------------



'**************************************************************************************
'*                                                                                    *
'*   H A U P T P R O G R A M M                                                        *
'*                                                                                    *
'**************************************************************************************
BeginProg
	Scan (cPROGSCAN,Sec,0,0)
	  RealTime(ActualTime)
    If FlagInit = 0 Then Call SUBInitialize
    If FlagEnterStatus Then Call SUBEnterStatus
    
    '***   Einschalten Hygroclip HC2-S3 (C6)   ****************************************
    If FlagForceMeasure Then
      PortSet(6,1)
      Delay(1,1,Sec)
    ElseIf TimeIntoInterval(55,60,Sec) Then
      PortSet(6,1)
    EndIf

    '***   Systemmessungen und GSM-Steuerung   ****************************************
 	  If TimeIntoInterval(0,60,Sec) Then
   	  Battery(VBATact)
   	  AvgRun(VBATmean,1,VBATact,30)
      If TimeIntoInterval(300,1440,Min) Then
        VBAT5h = VBATmean
        If VBAT5h > VBATlim Then
          FlagBatSave = False
        Else
          FlagBatSave = True
        EndIf
      EndIf
      PanelTemp(TLOGact,250)
      Call SUBGSM
    EndIf

    
    '***   Meteomessungen (5 Sekunden)   **********************************************
    '---   Niederschlag (Campbell ARG100: P2)   ---------------------------------------
    If StatPLUV >= 1 Then
      PulseCount(PLUVact,1,2,2,0,PluvCali,0)
      PluvSum = PluvSum + PLUVact
      Pluv10m = Pluv10m + PLUVact
    Else
      PLUVact = cSensorOff
    EndIf

    '***   Meteomessungen (60 Sekunden)   *********************************************
    If TimeIntoInterval(0,60,Sec) OR FlagForceMeasure Then
      '---   Lufttemperatur und -feuchte (Rotronic Hygroclip HC2-S3:  SE3/2, C6) ------
      If StatTARH >= 1 Then
        VoltSe(TAIRact,1,mv2500,3,False,0,_50Hz,0.1,-40)
        VoltSe(RHUMact,1,mv2500,2,False,0,_50Hz,0.1,0)      
        Call SUBCheckRange(TAIRact,-40,50,cstTARH)
        Call SUBCheckRange(RHUMact,0,100,cstTARH)
      Else
        TAIRact = cSensorOff
        RHUMact = cSensorOff
      EndIf
      '--- Speisung Hygroclip ausschalten
      PortSet(6,0)

      '---   kurzwellige Strahlung (SKS1110: SE1)   -----------------------------------
      If StatSRAD >= 1 Then
        VoltSe(SRADact,1,mV25,1,False,0,250,SRadCali,0)
        SUBCheckRange(SRADact,0,2000,cstSRAD)
      Else
        SRADact = cSensorOff
      EndIf
    EndIf

    FlagForceMeasure = False

    '***   Daten-Ablage   *************************************************************
		CallTable Meteo
    CallTable Konfiguration
    FlagConfigData = False

    '***   FTP Datentransfer vorbereiten   ********************************************
    If StatFTP >= 1 Then
      If TimeIntoInterval(0,cMETEOINT,Min) Then
        TAIR    = Meteo.Lufttemperatur(1,1)
        RHUM    = Meteo.Luftfeuchtigkeit(1,1)
        SRAD    = Meteo.Globalstrahlung(1,1)
        VBAT    = Meteo.Batteriespannung(1,1)
        TLOG    = Meteo.Loggertemperatur(1,1)
        If StatTARH = 0 Then
          TAIR = cSensorOff
          RHUM = cSensorOff
        EndIf
        If StatSRAD = 0 Then
          SRAD = cSensorOff
        EndIf
        '- Datenzeile ins lokale Datenfile schreiben
        DataLine = FormatFloat(DayOfMonth,"%02.0f") & "."
        DataLine = DataLine & FormatFloat(Month,"%02.0f") & "."
        DataLine = DataLine & FormatFloat(Year,"%04.0f") & " "
        DataLine = DataLine & FormatFloat(hour,"%02.0f") & ":"
        DataLine = DataLine & FormatFloat(minute,"%02.0f") & ","
        DataLine = DataLine & FormatFloat(StationID,"%.0f") & "," 
        DataLine = DataLine & TAIR & "," & RHUM & "," & Pluv10m & ","
        DataLine = DataLine & PluvSum & "," & SRAD & ","
        DataLine = DataLine & VBAT & "," & TLOG & "," & Quality & CHR(10)
        DataFile = FileOpen(cDataFileName,"a",-1)
        FileWrite(DataFile,DataLine,0)
        FileClose(DataFile)
        '---   FTP-Transfer initialisieren
        If NOT pppOpenState Then pppOpenCount = 0
        FTPSendSuccess = False
        FlagFTP = 1
      EndIf

      If TimeIntoInterval(0,1440,Min) Then
        FlagTimeSync = True
        FTPCount = 0
      EndIf
    EndIf
    
    '***   Reset der Niederschlags-Summenwerte   **************************************
    If TimeIntoInterval(0,cMETEOINT,Min) Then
      Pluv10m = 0
    EndIf
    If TimeIntoInterval(0,1440,Min) Then
      '---   Reset der laufenden Jahres-Niederschlagssumme jeweils am 1. Mai
      If Month = 5 AND DayOfMonth = 1 Then
        PluvSum = 0
      EndIf
    EndIf

	NextScan



'**************************************************************************************
'***																																								***
'***   F T P - D A T E N T R A N S F E R    			  																***
'***																																						    ***
'**************************************************************************************
  SlowSequence
  Scan(30,Sec,5,0)
    '---   Zeitsynchronisation mit "pool.ntp.org"   -----------------------------------
    If FlagTimeSync AND pppOpenState Then
      NTPOffset = NetworkTimeProtocol ("pool.ntp.org",3600,1000)
      FlagTimeSync = False
      Delay(1,10,Sec)
    EndIf
    '---   PPP-Verbindung aufbauen, falls nicht bereits offen   -----------------------
    If FlagFTP = 1 AND pppOpenState Then
      FlagFTP = 11
    EndIf
    If (FlagFTP = 1 AND NOT pppOpenState) OR FlagPPPOpen Then
      '---   PPP-Verbindung aufbauen
      pppOpenCount = pppOpenCount + 1
      pppIPAddress = PPPOpen
      If pppIPAddress <> "0.0.0.0" Then
        pppOpenState = True
        FlagPPPOpen  = False
        If FlagFTP = 1 Then FlagFTP = 11
      ElseIf pppOpenCount >= cPPPOPENATMPT Then
        '---   PPP-Verbindung fehlgeschlagen, Abbruch nach cPPPOPENATMPT Versuchen
        pppCloseSuccess = PPPClose
        FlagPPPOpen  = False
        FlagFTP = 0
      EndIf
    '---   Datenfile per FTP schicken   -----------------------------------------------
    ElseIf FlagFTP = 11 Then
      ' FTP Datenuebertragung (nur ein Versuch, bei Misserfolg File stehenlassen)
      If FTPClient(cFTP_IP,cFTP_User,cFTP_Pwd,cDataFileName,cFTPFileName,0) Then
        FileManage(cDataFileName,8)
        FTPSendSuccess = True
        FTPCount = FTPCount + 1
      EndIf
      FlagFTP = 12
      ' falls FlagPPPClose, dann GPRS-Verbindung nach Transfer schliessen
    ElseIf FlagFTP = 12 OR FlagFTP = 0 Then
      If FlagPPPClose Then
        pppCloseSuccess = PPPClose
        If pppCloseSuccess Then
          pppOpenState = False
          FlagPPPClose = False
          FlagFTP = 0
        EndIf
      EndIf
    EndIf
  Next Scan
EndProg

